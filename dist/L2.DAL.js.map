{"version":3,"file":"L2.DAL.js","sourceRoot":"","sources":["../L2-Lib/L2.DAL.ts"],"names":[],"mappings":"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","sourcesContent":["import L2 from \"./L2\"\r\n\r\n\r\n// TODO: Clean-up the polyfills below - rather include the necessary dependency refs?\r\n\r\n// Production steps of ECMA-262, Edition 5, 15.4.4.14\r\n// Reference: http://es5.github.io/#x15.4.4.14\r\nif (!Array.prototype.indexOf) {\r\n    Array.prototype.indexOf = function (searchElement, fromIndex) {\r\n\r\n        var k;\r\n\r\n        // 1. Let o be the result of calling ToObject passing\r\n        //    the this value as the argument.\r\n        if (this == null) {\r\n            throw new TypeError('\"this\" is null or not defined');\r\n        }\r\n\r\n        var o = Object(this);\r\n\r\n        // 2. Let lenValue be the result of calling the Get\r\n        //    internal method of o with the argument \"length\".\r\n        // 3. Let len be ToUint32(lenValue).\r\n        var len = o.length >>> 0;\r\n\r\n        // 4. If len is 0, return -1.\r\n        if (len === 0) {\r\n            return -1;\r\n        }\r\n\r\n        // 5. If argument fromIndex was passed let n be\r\n        //    ToInteger(fromIndex); else let n be 0.\r\n        var n = +fromIndex || 0;\r\n\r\n        if (Math.abs(n) === Infinity) {\r\n            n = 0;\r\n        }\r\n\r\n        // 6. If n >= len, return -1.\r\n        if (n >= len) {\r\n            return -1;\r\n        }\r\n\r\n        // 7. If n >= 0, then Let k be n.\r\n        // 8. Else, n<0, Let k be len - abs(n).\r\n        //    If k is less than 0, then let k be 0.\r\n        k = Math.max(n >= 0 ? n : len - Math.abs(n), 0);\r\n\r\n        // 9. Repeat, while k < len\r\n        while (k < len) {\r\n            // a. Let Pk be ToString(k).\r\n            //   This is implicit for LHS operands of the in operator\r\n            // b. Let kPresent be the result of calling the\r\n            //    HasProperty internal method of o with argument Pk.\r\n            //   This step can be combined with c\r\n            // c. If kPresent is true, then\r\n            //    i.  Let elementK be the result of calling the Get\r\n            //        internal method of o with the argument ToString(k).\r\n            //   ii.  Let same be the result of applying the\r\n            //        Strict Equality Comparison Algorithm to\r\n            //        searchElement and elementK.\r\n            //  iii.  If same is true, return k.\r\n            if (k in o && o[k] === searchElement) {\r\n                return k;\r\n            }\r\n            k++;\r\n        }\r\n        return -1;\r\n    };\r\n}\r\n\r\n// Production steps of ECMA-262, Edition 5, 15.4.4.19\r\n// Reference: http://es5.github.io/#x15.4.4.19\r\nif (!Array.prototype.map) {\r\n\r\n    Array.prototype.map = function (callback, thisArg) {\r\n\r\n        var T, A, k;\r\n\r\n        if (this == null) {\r\n            throw new TypeError(' this is null or not defined');\r\n        }\r\n\r\n        // 1. Let O be the result of calling ToObject passing the |this| \r\n        //    value as the argument.\r\n        var O = Object(this);\r\n\r\n        // 2. Let lenValue be the result of calling the Get internal \r\n        //    method of O with the argument \"length\".\r\n        // 3. Let len be ToUint32(lenValue).\r\n        var len = O.length >>> 0;\r\n\r\n        // 4. If IsCallable(callback) is false, throw a TypeError exception.\r\n        // See: http://es5.github.com/#x9.11\r\n        if (typeof callback !== 'function') {\r\n            throw new TypeError(callback + ' is not a function');\r\n        }\r\n\r\n        // 5. If thisArg was supplied, let T be thisArg; else let T be undefined.\r\n        if (arguments.length > 1) {\r\n            T = thisArg;\r\n        }\r\n\r\n        // 6. Let A be a new array created as if by the expression new Array(len) \r\n        //    where Array is the standard built-in constructor with that name and \r\n        //    len is the value of len.\r\n        A = new Array(len);\r\n\r\n        // 7. Let k be 0\r\n        k = 0;\r\n\r\n        // 8. Repeat, while k < len\r\n        while (k < len) {\r\n\r\n            var kValue, mappedValue;\r\n\r\n            // a. Let Pk be ToString(k).\r\n            //   This is implicit for LHS operands of the in operator\r\n            // b. Let kPresent be the result of calling the HasProperty internal \r\n            //    method of O with argument Pk.\r\n            //   This step can be combined with c\r\n            // c. If kPresent is true, then\r\n            if (k in O) {\r\n\r\n                // i. Let kValue be the result of calling the Get internal \r\n                //    method of O with argument Pk.\r\n                kValue = O[k];\r\n\r\n                // ii. Let mappedValue be the result of calling the Call internal \r\n                //     method of callback with T as the this value and argument \r\n                //     list containing kValue, k, and O.\r\n                mappedValue = callback.call(T, kValue, k, O);\r\n\r\n                // iii. Call the DefineOwnProperty internal method of A with arguments\r\n                // Pk, Property Descriptor\r\n                // { Value: mappedValue,\r\n                //   Writable: true,\r\n                //   Enumerable: true,\r\n                //   Configurable: true },\r\n                // and false.\r\n\r\n                // In browsers that support Object.defineProperty, use the following:\r\n                // Object.defineProperty(A, k, {\r\n                //   value: mappedValue,\r\n                //   writable: true,\r\n                //   enumerable: true,\r\n                //   configurable: true\r\n                // });\r\n\r\n                // For best browser support, use the following:\r\n                A[k] = mappedValue;\r\n            }\r\n            // d. Increase k by 1.\r\n            k++;\r\n        }\r\n\r\n        // 9. return A\r\n        return A;\r\n    };\r\n}\r\n\r\nif (!Array.prototype.filter) {\r\n    Array.prototype.filter = function (fun/*, thisArg*/) {\r\n        'use strict';\r\n\r\n        if (this === void 0 || this === null) {\r\n            throw new TypeError();\r\n        }\r\n\r\n        var t = Object(this);\r\n        var len = t.length >>> 0;\r\n        if (typeof fun !== 'function') {\r\n            throw new TypeError();\r\n        }\r\n\r\n        var res = [];\r\n        var thisArg = arguments.length >= 2 ? arguments[1] : void 0;\r\n        for (var i = 0; i < len; i++) {\r\n            if (i in t) {\r\n                var val = t[i];\r\n\r\n                // NOTE: Technically this should Object.defineProperty at\r\n                //       the next index, as push can be affected by\r\n                //       properties on Object.prototype and Array.prototype.\r\n                //       But that method's new, and collisions should be\r\n                //       rare, so use the more-compatible alternative.\r\n                if (fun.call(thisArg, val, i, t)) {\r\n                    res.push(val);\r\n                }\r\n            }\r\n        }\r\n\r\n        return res;\r\n    };\r\n}\r\n\r\n\r\ninterface Error {\r\n    response: any;\r\n}\r\n\r\nexport interface JWT {\r\n    access_token?: string;\r\n    expires_in?: number;\r\n    token_type?: string;\r\n}\r\n\r\n\r\nmodule jsDAL {\r\n\r\n    export class Server {\r\n        //private static _serverUrl: string;\r\n        //private static _dbConnection: string;\r\n        // 30/08/2016, PL: IE8 does not support GET/SET properties\r\n        //static get serverUrl(): string {\r\n        //    return Server._serverUrl;\r\n        //}\r\n\r\n        //static get dbConnection(): string {\r\n        //    return Server._dbConnection;\r\n        //}\r\n        public static serverUrl: string;\r\n        public static dbConnection: string;\r\n        public static overridingDbSource: string;\r\n        public static jwt: JWT;\r\n\r\n        static configure(options: IDALServerOptions) {\r\n\r\n            if (options.dbConnection == \"\") options.dbConnection = null;\r\n\r\n            Server.serverUrl = options.serverUrl;\r\n            Server.dbConnection = options.dbConnection;\r\n            Server.jwt = options.jwt;\r\n            Server.overridingDbSource = options.overridingDbSource;\r\n        }\r\n    }\r\n\r\n    export interface IDALServerOptions {\r\n        serverUrl?: string;\r\n        dbConnection?: string;\r\n        overridingDbSource?: string;\r\n        jwt?: JWT;\r\n    }\r\n\r\n    enum ApiResponseType {\r\n        Unknown = 0,\r\n        Success = 1,\r\n        InfoMsg = 10,\r\n        ExclamationModal = 20,\r\n        Error = 30,\r\n        Exception = 40\r\n    }\r\n\r\n    class ApiResponse {\r\n        Message: string;\r\n        Title: string;\r\n        Type: ApiResponseType;\r\n        Data: any;\r\n    }\r\n\r\n    class ApiResponseEndThenChain { handled: boolean; }\r\n\r\n    \r\n    (<any>Promise).prototype.ifthen = function (cond, cb) {\r\n        //if (cond) return this.then(cb);  \r\n        return this.then(r => {\r\n            if (cond) return cb(r);\r\n            else return r;\r\n        });\r\n    }\r\n\r\n    export interface IExecDefaults {\r\n        AutoSetTokenGuid?: boolean;\r\n        AutoProcessApiResponse?: boolean;\r\n        ShowPageLoadingIndicator?: boolean;\r\n        CommandTimeoutInSeconds?: number; // SQL Command timeout\r\n        $select?: string;\r\n    }\r\n\r\n\r\n    function ExecGlobal(method: string, dbSource: string, schema: string, routine: string\r\n        , mappedParams: any[]\r\n        , options: (IExecDefaults)\r\n        , alwaysCBs?: ((res:any)=>any)[]\r\n\r\n    ): Promise<any> {\r\n\r\n        return new Promise((resolve, reject) => {\r\n            // create query string based on routine parameters\r\n            var parmQueryStringArray: any[] = mappedParams.map(p => {\r\n                var parmValue = options[p];\r\n\r\n                // serialize Date/moment objects to ISO string format\r\n                if (typeof (moment) != \"undefined\" && moment.isMoment(parmValue)) {\r\n                    parmValue = parmValue.toDate().toISOString();\r\n                }\r\n                else if (parmValue instanceof Date) {\r\n                    parmValue = parmValue.toISOString();\r\n                }\r\n\r\n                return encodeURIComponent(p) + \"=\" + encodeURIComponent(parmValue)\r\n            });\r\n\r\n            var tokenGuid: string = null;\r\n\r\n            if (options) {\r\n                if (options.AutoSetTokenGuid) {\r\n                    tokenGuid = window[\"TokenGuid\"];\r\n\r\n                    if (tokenGuid) parmQueryStringArray.push(\"tokenGuid=\" + tokenGuid);\r\n                }\r\n\r\n                if (options.$select) parmQueryStringArray.push(\"$select=\" + options.$select);\r\n\r\n            }\r\n\r\n            var parmQueryString = parmQueryStringArray.join(\"&\");\r\n\r\n            if (parmQueryString && parmQueryString.length > 0 && parmQueryString != \"\") parmQueryString = \"?\" + parmQueryString;\r\n            else parmQueryString = \"\";\r\n\r\n            if (Server.overridingDbSource) dbSource = Server.overridingDbSource;\r\n\r\n\r\n            // GET\r\n            if (method == \"GET\") {\r\n                fetchWrap(`${Server.serverUrl}/api/exec/${dbSource}/${Server.dbConnection}/${schema}/${routine}${parmQueryString}`, null, alwaysCBs)\r\n                    .then(checkHttpStatus)\r\n                    .then(parseJSON)\r\n                    .then(transformResults)\r\n                    .ifthen(options.AutoProcessApiResponse, processApiResponse)\r\n                    .then(r => resolve(r))\r\n                [\"catch\"](r => { reject(fetchCatch(r)); return r; })\r\n                    ;\r\n            }\r\n            else if (method == \"POST\") {\r\n                var bodyContent = {};\r\n\r\n                mappedParams.forEach(p => { bodyContent[p] = options[p]; });\r\n\r\n                if (tokenGuid) bodyContent[\"tokenGuid\"] = tokenGuid;\r\n\r\n                fetchWrap(`${Server.serverUrl}/api/exec/${dbSource}/${Server.dbConnection}/${schema}/${routine}`\r\n                    , {\r\n                        method: 'POST',\r\n                        headers: {\r\n                            'Accept': 'application/json',\r\n                            'Content-Type': 'application/json'\r\n                        },\r\n                        body: JSON.stringify(bodyContent)\r\n                    }, alwaysCBs)\r\n                    .then(checkHttpStatus)\r\n                    .then(parseJSON)\r\n                    .then(transformResults)\r\n                    .ifthen(options.AutoProcessApiResponse, processApiResponse)\r\n                    .then(r => resolve(r))\r\n                [\"catch\"](r => { reject(fetchCatch(r)); })\r\n                    ;\r\n            }\r\n            else if (method == \"SCALAR\") {\r\n                fetchWrap(`${Server.serverUrl}/api/execScalar/${dbSource}/${Server.dbConnection}/${schema}/${routine}${parmQueryString}`, {\r\n                    credentials: 'same-origin'\r\n                }, alwaysCBs)\r\n                    .then(checkHttpStatus)\r\n                    .then(parseJSON)\r\n                    .ifthen(options.AutoProcessApiResponse, processApiResponse)\r\n                    .then(r => resolve(r))\r\n                [\"catch\"](r => { reject(fetchCatch(r)); })\r\n                    ;\r\n            }\r\n            else throw \"Invalid method: \" + method;\r\n\r\n        });\r\n    }\r\n\r\n    function fetchWrap(url: string | Request\r\n        , init?: RequestInit | any\r\n        , alwaysCBs?: ((res: any) => any)[]): any | Promise<Response> {\r\n\r\n        return new Promise<Response>((resolve, reject) => {\r\n\r\n            if (jsDAL.Server.jwt != null) {\r\n\r\n                if (!init) init = {};\r\n                if (!init.headers) init.headers = {};\r\n\r\n                init.headers[\"Authorization\"] = `Bearer ${jsDAL.Server.jwt.access_token}`;\r\n            }\r\n\r\n            fetch(url, init).then((r: any) => {\r\n                r.fetch = { url: url, init: init };\r\n                resolve(r);\r\n                return r;\r\n            })[\"catch\"](err => {\r\n                err.fetch = { url: url, init: init };\r\n                reject(err);\r\n                return err;\r\n            }).then(r => {\r\n                resolve(<any>r);\r\n\r\n                if (alwaysCBs) callAlwaysCallbacks(r, alwaysCBs);\r\n\r\n                return r;\r\n            });\r\n        });\r\n    }\r\n\r\n    function callAlwaysCallbacks(result: any, alwaysCBs?: ((res: any) => any)[]) {\r\n\r\n        if (!alwaysCBs || alwaysCBs.length == 0) return result;\r\n\r\n        alwaysCBs.forEach(cb => {\r\n\r\n            if (typeof cb === \"function\") {\r\n\r\n                cb.call(this, result);\r\n                //cb.call\r\n            }\r\n\r\n        });\r\n    }\r\n\r\n    export function transformResults(r) {\r\n\r\n        if (typeof (r.Data) === \"undefined\") return r;\r\n\r\n        for (var e in r.Data) {\r\n\r\n            if (!(e.substring(0, 5) == \"Table\")) continue;\r\n\r\n            var dt = r.Data[e];\r\n\r\n            var transformed = [];\r\n\r\n            for (var rowIx = 0; rowIx < dt.Data.length; rowIx++) {\r\n\r\n                var newRowObject = {};\r\n\r\n                for (var colIx = 0; colIx < dt.Data[rowIx].length; colIx++) {\r\n                    // TODO: Add support for DateTime fields?\r\n                    newRowObject[dt.Fields[colIx].name] = dt.Data[rowIx][colIx];\r\n                }\r\n\r\n                transformed.push(newRowObject);\r\n            }\r\n\r\n            r.Data[e] = transformed;\r\n        }\r\n\r\n        return r;\r\n    }\r\n\r\n    function checkHttpStatus(response: Response | any): any {\r\n\r\n        response.hasReachedResponse = true;\r\n        if (response.status >= 200 && response.status < 300) {\r\n            return response;\r\n        } else {\r\n            var contentType = response.headers.get(\"content-type\");\r\n\r\n            let fetchDetails: string = null;\r\n\r\n            if (response.fetch) fetchDetails = JSON.stringify(response.fetch);\r\n\r\n            // look for a json result\r\n            if (contentType && contentType.indexOf(\"application/json\") !== -1) {\r\n                return response.json().then(function (json) {\r\n                    L2.exclamation(json.Message, \"Http status code \" + response.status);\r\n                    L2.handleException(new Error(JSON.stringify(json)));\r\n                    // TODO:\r\n                    //!window.ICE.LogJavascriptErrorToDb(new Error(JSON.stringify(json)), null, { origin: \"checkHttpStatus 01\", fetch: fetchDetails });\r\n                    throw json;\r\n                });\r\n            } else {\r\n                return response.text().then(function (text) {\r\n                    L2.exclamation(text, \"Http status code 02 \" + response.status);\r\n                    L2.handleException(new Error(text), { origin: \"checkHttpStatus 02\", fetch: fetchDetails });\r\n\r\n                    throw response;\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    function parseJSON(response) {\r\n        return response.json().then((json) => {\r\n            // if still a string after parsing once and it *looks* like json...\r\n            if (typeof (json) === \"string\" && (<any>json).startsWith(\"{\") && (<any>json).endsWith(\"}\")) return JSON.parse(json);\r\n            return json;\r\n        });\r\n    }\r\n\r\n    function fetchCatch(ex: any) {\r\n        //console.log(\"fetch...\");\r\n        //console.info(ex);\r\n\r\n        if (ex instanceof ApiResponseEndThenChain) {\r\n            ex.handled = true; //?\r\n            // handle special case where we just threw an exception(ApiResponseEndThenChain) to end any remaining 'thens' on the promise.\r\n            // we have to rethrow to prevent any additional '.then' callbacks from being executed\r\n            throw ex;\r\n        }\r\n\r\n        if (typeof (ex.hasReachedResponse) == \"undefined\" || !ex.hasReachedResponse) {\r\n            // we get here if no response was received from the fetch call, so the catch handler was called before checkHttpStatus. Mostly likely a network related problem.\r\n\r\n            var fetchDetails = null;\r\n\r\n            if (ex.fetch) fetchDetails = JSON.stringify(ex.fetch);\r\n\r\n            L2.handleException(new Error(JSON.stringify(ex)), { origin: \"fetchCatch\", fetch: fetchDetails });\r\n\r\n            var msg = ex;\r\n\r\n            if (ex.Message) msg = ex.Message;\r\n\r\n\r\n            return msg;\r\n        }\r\n\r\n        return ex;\r\n    }\r\n\r\n    function processApiResponse(json): Response {\r\n\r\n        // if the result is a string, test for ApiResponse\r\n        if (typeof (json) === \"object\" && typeof (json.ApiResponseVer) !== \"undefined\") {\r\n\r\n            let apiResponse = json;\r\n\r\n            switch (apiResponse.Type) {\r\n                case ApiResponseType.Success:\r\n                    return apiResponse;\r\n                case ApiResponseType.InfoMsg:\r\n                    L2.info(apiResponse.Message);\r\n                    break;\r\n                case ApiResponseType.ExclamationModal:\r\n                    L2.exclamation(apiResponse.Message, apiResponse.Title);\r\n                    throw new ApiResponseEndThenChain();\r\n                case ApiResponseType.Exception:\r\n                    L2.handleException(apiResponse);\r\n                    throw new ApiResponseEndThenChain();\r\n            }\r\n\r\n\r\n            return apiResponse;\r\n        }\r\n        else {\r\n            return json;\r\n        }\r\n\r\n    }\r\n\r\n    export class Batch {\r\n\r\n        private routineList: Sproc[];\r\n\r\n        constructor(...routines: Sproc[]) {\r\n            if (routines.length == 0) {\r\n                throw \"You have to specify at least one routine to execute.\";\r\n            }\r\n\r\n            for (var e in routines) {\r\n                if (!(routines[e] instanceof jsDAL.Sproc)) {\r\n                    throw \"All arguments must derive from jsDAL.Sproc.\";\r\n                }\r\n            }\r\n\r\n            this.routineList = routines;\r\n        }\r\n\r\n        public ExecQuery(options?: IExecDefaults & IExecDefaults): Promise<any> {\r\n            // default settings\r\n            let settings: IExecDefaults = {\r\n                AutoSetTokenGuid: true,\r\n                AutoProcessApiResponse: true,\r\n                ShowPageLoadingIndicator: true,\r\n                CommandTimeoutInSeconds: 60\r\n            };\r\n\r\n            options = options || {};\r\n\r\n            settings = L2.extend(settings, options);\r\n\r\n            return new Promise((resolve, reject) => {\r\n\r\n                var batch = [];\r\n\r\n                for (var ix = 0; ix < this.routineList.length; ix++) {\r\n                    var r = this.routineList[ix];\r\n\r\n                    batch.push({ Ix: ix, Routine: r.getExecPacket() });\r\n                }\r\n\r\n                // create query string based on routine parameters\r\n                var optionsQueryStringArray: any[] = [];\r\n\r\n                if (settings) {\r\n                    if (settings.AutoSetTokenGuid) {\r\n                        var tg = window[\"TokenGuid\"];\r\n\r\n                        if (tg) optionsQueryStringArray.push(\"tokenGuid=\" + tg);\r\n                    }\r\n                }\r\n\r\n                var parmQueryString = optionsQueryStringArray.join(\"&\");\r\n\r\n                fetchWrap(`${Server.serverUrl}/api/execBatch?batch=${JSON.stringify(batch)}&options=${parmQueryString}`)\r\n                    .then(checkHttpStatus)\r\n                    .then(parseJSON)\r\n                    .then(transformResults)\r\n                    .ifthen(options.AutoProcessApiResponse, processApiResponse)\r\n                    .then(r => {\r\n                        //console.dir(r);\r\n                        for (var ix = 0; ix < this.routineList.length; ix++) {\r\n                            var routine = this.routineList[ix];\r\n\r\n                            var transformed = transformResults(r.Data[ix]);\r\n\r\n                            try {\r\n                                //if (options.AutoProcessApiResponse)\r\n                                processApiResponse(transformed);\r\n                            }\r\n                            catch (ex) { /*ignore exceptions*/ }\r\n\r\n                            routine.deferred.resolve(transformed);\r\n                        }\r\n\r\n                    })\r\n                    .then(r => resolve(r))\r\n                [\"catch\"](r => { fetchCatch(r); reject(r) })\r\n                    ;\r\n\r\n            });\r\n        }\r\n\r\n        public ExecNonQuery(options?: any): Promise<any> {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    export class Deferred {\r\n        public promise: Promise<any>;\r\n        public resolve: (value?: any | PromiseLike<any>) => void;\r\n        public reject: (error?: any) => void;\r\n\r\n        constructor() {\r\n            this.promise = new Promise((resolve, reject) => {\r\n                this.reject = reject\r\n                this.resolve = resolve\r\n            })\r\n        }\r\n    }\r\n\r\n    export class Sproc /*implements Thenable<any>*/ {\r\n\r\n        // TODO: turn this into a GET property\r\n        public deferred: Deferred = null;\r\n\r\n        protected dbSource: string;\r\n        protected catalog: string;\r\n\r\n        private schema: string = null;\r\n        private routine: string = null;\r\n        private routineParams: string[] = null;\r\n        private constructorOptions: any;\r\n\r\n        private selectFieldsCsv: string;\r\n\r\n        public lastExecutionTime: number;\r\n        public isLoading: boolean = false;\r\n\r\n        private _alwaysCallbacks: ((res: any) => any)[];\r\n\r\n\r\n        // something in angular 2 seems to break the instanceof check...not sure what yet\r\n        public static looksLikeADuck(val: any): boolean {\r\n            if (!val) return false;\r\n            return typeof (val.ExecQuery) === \"function\" && typeof (val.routine) === \"string\" && typeof (val.routineParams) === \"object\";\r\n        }\r\n\r\n        public getExecPacket(): { dbSource: string, dbConnection: string, schema: string, routine: string, params: string[], $select: string } {\r\n            return {\r\n                dbSource: this.dbSource,\r\n                dbConnection: Server.dbConnection,\r\n                schema: this.schema,\r\n                routine: this.routine,\r\n                params: this.constructorOptions,\r\n                $select: this.selectFieldsCsv\r\n            };\r\n        }\r\n\r\n        constructor(schema: string, routine: string, params?: string[], options?: IExecDefaults) {\r\n            this.deferred = new Deferred();\r\n\r\n            this.schema = schema;\r\n            this.routine = routine;\r\n            this.routineParams = params;\r\n            this.constructorOptions = options;\r\n        }\r\n\r\n        public then(...args) {\r\n            return this.deferred.promise.then.apply(this.deferred.promise, args);\r\n        }\r\n\r\n        public always(cb: (...any) => any) : Sproc {\r\n            if (!this._alwaysCallbacks) this._alwaysCallbacks = [];\r\n\r\n            this._alwaysCallbacks.push(cb);\r\n\r\n            return this;\r\n        }\r\n\r\n        /*\r\n        var dalPromise = sproc.Exec();\r\n\r\n        dalPromise.always(() => { console.log(\"once execution ends either through success or failure call this piece of code\"); })\r\n            .then(() => console.log(\"success\"))\r\n            .then(() => console.log(\"success do something more\"))\r\n            .catch((err) => { console.error(err); });\r\n        */\r\n        protected Exec(method: string, options?: IExecDefaults): Promise<any> {\r\n\r\n            if (!method || method == \"\")\r\n                throw `'method' must be specified. Consider using the methods ExecQuery or ExecNonQuery.`;\r\n\r\n\r\n            // default settings\r\n            let settings: IExecDefaults = {\r\n                AutoSetTokenGuid: true,\r\n                AutoProcessApiResponse: true,\r\n                ShowPageLoadingIndicator: true,\r\n                CommandTimeoutInSeconds: 60\r\n            };\r\n\r\n            var mappedParams: any[] = [];\r\n\r\n            options = options || {};\r\n            this.constructorOptions = this.constructorOptions || {};\r\n\r\n\r\n            options = L2.extend(options, this.constructorOptions);\r\n            settings = L2.extend(settings, options);\r\n            // TODO: can we just assume TypeScript's __extends exists?\r\n\r\n            //?__extends(options, this.constructorOptions);\r\n            //?__extends(settings, options);\r\n\r\n            // look for parameters passed in that match the expected routine parameters\r\n            if (options && this.routineParams) {\r\n                mappedParams = this.routineParams.filter(parmName => {\r\n                    return options[parmName] !== undefined;\r\n                });\r\n            }\r\n\r\n            if (this.selectFieldsCsv) settings.$select = this.selectFieldsCsv;\r\n            let startTick = performance.now();\r\n            this.isLoading = true;\r\n\r\n            return ExecGlobal(method, this.dbSource, this.schema, this.routine, mappedParams, settings, this._alwaysCallbacks)\r\n                .then(r => { this.lastExecutionTime = performance.now() - startTick; this.isLoading = false; this.deferred.resolve(r); return r; });\r\n        }\r\n\r\n        public ExecQuery(options?: IExecDefaults): Promise<any> {\r\n            return this.Exec(\"GET\", options);\r\n        }\r\n\r\n        public ExecNonQuery(options?: IExecDefaults): Promise<any> {\r\n            return this.Exec(\"POST\", options);\r\n        }\r\n\r\n        public ExecSingleResult(options?: IExecDefaults): Promise<any> {\r\n            return this.Exec(\"GET\", options).then(r => {\r\n\r\n                if (r && typeof (r.Data) !== \"undefined\" && typeof (r.Data.Table0) !== \"undefined\") {\r\n\r\n                    var r1 = null;\r\n                    var op = r.Data.OutputParms;\r\n                    // take the first row of the first table in the result\r\n                    if (r.Data.Table0.length > 0) r1 = r.Data.Table0[0];\r\n\r\n                    // clean up existing Data object\r\n                    delete r.Data;\r\n\r\n                    r.Data = { OutputParms: op, Result: r1 };\r\n\r\n                    return r;\r\n                }\r\n\r\n                return r;\r\n\r\n            });\r\n        }\r\n\r\n\r\n        // Limits the return\r\n        // Tables are split by ; (semi-colon)\r\n        // Columns are split by , (comma)\r\n        public Select(...fieldNames: string[][]): Sproc {\r\n            if (fieldNames.length == null) return this;\r\n\r\n            this.selectFieldsCsv = fieldNames.join(\";\");\r\n            return this;\r\n        }\r\n\r\n\r\n    }\r\n\r\n    export class UDF extends Sproc {\r\n        public Exec(options?: IExecDefaults): Promise<any> {\r\n            return super.Exec(\"SCALAR\", options).then(r => {\r\n                // return the single result value\r\n                if (r.IsDate) return new Date(r.Data);\r\n                return r.Data;\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    export class ServerVariables {\r\n        private static PREFIX_MARKER:string = \"$jsDAL$\";\r\n        static get ClientIP(): string {\r\n            return `${ServerVariables.PREFIX_MARKER}.RemoteClient.IP`;\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default jsDAL;"]}