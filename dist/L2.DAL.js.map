{"version":3,"file":"L2.DAL.js","sourceRoot":"","sources":["../L2-Lib/L2.DAL.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,2BAAuC;AAUvC,IAAc,KAAK,CA2uBlB;AA3uBD,WAAc,KAAK;IAIf,IAAK,eAOJ;IAPD,WAAK,eAAe;QAChB,2DAAW,CAAA;QACX,2DAAW,CAAA;QACX,4DAAY,CAAA;QACZ,8EAAqB,CAAA;QACrB,wDAAU,CAAA;QACV,gEAAc,CAAA;IAClB,CAAC,EAPI,eAAe,KAAf,eAAe,QAOnB;IAED;QAAA;QAKA,CAAC;QAAD,kBAAC;IAAD,CAAC,AALD,IAKC;IAED;QAAA;QAAkD,CAAC;QAAD,8BAAC;IAAD,CAAC,AAAnD,IAAmD;IAEnD,EAAE,CAAC,CAAC,OAAO,CAAO,OAAQ,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,WAAW,CAAC,CAAC,CAAC;QACpD,OAAQ,CAAC,SAAS,CAAC,MAAM,GAAG,UAAU,IAAI,EAAE,EAAE;YAChD,mCAAmC;YACnC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,UAAA,CAAC;gBACd,EAAE,CAAC,CAAC,IAAI,CAAC;oBAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;gBACvB,IAAI;oBAAC,MAAM,CAAC,CAAC,CAAC;YAClB,CAAC,CAAC,CAAC;QACP,CAAC,CAAA;IACL,CAAC;IAaD,0BAAiC,CAAC;QAE9B,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,WAAW,CAAC;YAAC,MAAM,CAAC,CAAC,CAAC;QAE9C,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;YAEnB,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,OAAO,CAAC,CAAC;gBAAC,QAAQ,CAAC;YAE9C,IAAI,EAAE,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YAEnB,IAAI,WAAW,GAAG,EAAE,CAAC;YAErB,GAAG,CAAC,CAAC,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,EAAE,CAAC,IAAI,CAAC,MAAM,EAAE,KAAK,EAAE,EAAE,CAAC;gBAElD,IAAI,YAAY,GAAG,EAAE,CAAC;gBAEtB,GAAG,CAAC,CAAC,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,MAAM,EAAE,KAAK,EAAE,EAAE,CAAC;oBACzD,yCAAyC;oBACzC,YAAY,CAAC,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC;gBAChE,CAAC;gBAED,WAAW,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;YACnC,CAAC;YAED,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,WAAW,CAAC;QAC5B,CAAC;QAED,MAAM,CAAC,CAAC,CAAC;IACb,CAAC;IA5Be,sBAAgB,mBA4B/B,CAAA;IAED;QAAA;QAkWA,CAAC;QAjWU,eAAU,GAAjB,UAAkB,IAAwB;YAEtC,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;gBAC/B,kDAAkD;gBAClD,IAAI,oBAAoB,GAAU,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,UAAA,CAAC;oBACrD,IAAI,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;oBAEhC,qDAAqD;oBACrD,EAAE,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,WAAW,IAAI,MAAM,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;wBAC/D,SAAS,GAAG,IAAI,CAAC,8BAA8B,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,mCAAmC;oBAC5G,CAAC;oBACD,IAAI,CAAC,EAAE,CAAC,CAAC,SAAS,YAAY,IAAI,CAAC,CAAC,CAAC;wBACjC,sCAAsC;wBACtC,SAAS,GAAG,IAAI,CAAC,8BAA8B,CAAC,SAAS,CAAC,CAAC;oBAC/D,CAAC;oBAED,EAAE,CAAC,CAAC,SAAS,IAAI,IAAI,CAAC,CAAC,CAAC;wBACpB,MAAM,CAAC,kBAAkB,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,kBAAkB,CAAC,SAAS,CAAC,CAAA;oBACtE,CAAC;oBACD,IAAI,CAAC,CAAC;wBACF,MAAM,CAAC,kBAAkB,CAAC,CAAC,CAAC,GAAG,iBAAiB,CAAC;oBACrD,CAAC;gBACL,CAAC,CAAC,CAAC;gBAGH,IAAI,SAAS,GAAW,IAAI,CAAC;gBAC7B,IAAI,aAAa,GAA8B,EAAE,CAAC;gBAElD,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;oBACf,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,CAAC,CAAC;wBAChC,SAAS,GAAG,MAAM,CAAC,WAAW,CAAC,CAAC;wBAEhC,wDAAwD;wBACxD,EAAE,CAAC,CAAC,SAAS,CAAC;4BAAC,oBAAoB,CAAC,IAAI,CAAC,YAAY,GAAG,SAAS,CAAC,CAAC;oBACvE,CAAC;oBAED,wDAAwD;oBACxD,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC;wBAAC,oBAAoB,CAAC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;oBACvF,kFAAkF;oBAClF,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC;wBACxB,aAAa,CAAC,aAAa,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC;oBACzD,CAAC;gBAEL,CAAC;gBAED,IAAI,eAAe,GAAG,oBAAoB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;gBAErD,EAAE,CAAC,CAAC,eAAe,IAAI,eAAe,CAAC,MAAM,GAAG,CAAC,IAAI,eAAe,IAAI,EAAE,CAAC;oBAAC,eAAe,GAAG,GAAG,GAAG,eAAe,CAAC;gBACpH,IAAI;oBAAC,eAAe,GAAG,EAAE,CAAC;gBAE1B,EAAE,CAAC,CAAC,gBAAW,CAAC,kBAAkB,CAAC;oBAAC,IAAI,CAAC,QAAQ,GAAG,gBAAW,CAAC,kBAAkB,CAAC;gBAEnF,EAAE,CAAC,CAAC,gBAAW,CAAC,gBAAgB,CAAC,CAAC,CAAC;oBAC/B,aAAa,CAAC,WAAW,CAAC,GAAG,gBAAW,CAAC,gBAAgB,CAAC;gBAC9D,CAAC;gBAED,EAAE,CAAC,CAAC,CAAC,MAAM,EAAE,QAAQ,EAAE,YAAY,EAAE,OAAO,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;oBAC7E,MAAM,IAAI,KAAK,CAAC,yCAAuC,IAAI,CAAC,YAAc,CAAC,CAAC;gBAChF,CAAC;gBAED,MAAM;gBACN,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,IAAI,KAAK,CAAC,CAAC,CAAC;oBAC3B,IAAI,OAAO,GAAG,IAAI,CAAC;oBAEnB,EAAE,CAAC,CAAC,aAAa,IAAI,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;wBACzD,EAAE,CAAC,CAAC,OAAO,IAAI,IAAI,CAAC;4BAAC,OAAO,GAAG,EAAE,CAAC;wBAClC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,aAAa,CAAC,CAAC,CAAC;4BAC1B,OAAO,CAAC,CAAC,CAAC,GAAG,aAAa,CAAC,CAAC,CAAC,CAAC;wBAClC,CAAC;oBACL,CAAC;oBAED,IAAI,IAAI,GAAG,IAAI,CAAC;oBAEhB,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;wBACV,IAAI,GAAG,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC;oBAChC,CAAC;oBAED,IAAI,MAAM,GAAc,gBAAW,CAAC,SAAS,aAAQ,IAAI,CAAC,YAAY,SAAI,IAAI,CAAC,QAAQ,SAAI,gBAAW,CAAC,YAAY,SAAI,IAAI,CAAC,MAAM,SAAI,IAAI,CAAC,OAAO,GAAG,eAAiB,CAAC;oBAEvK,qCAAqC;oBACrC,EAAE,CAAC,CAAC,gBAAW,CAAC,QAAQ,CAAC,CAAC,CAAC;wBACvB,MAAM,GAAM,gBAAW,CAAC,SAAS,aAAQ,IAAI,CAAC,YAAY,SAAI,gBAAW,CAAC,QAAQ,SAAI,IAAI,CAAC,MAAM,SAAI,IAAI,CAAC,OAAO,GAAG,eAAiB,CAAC;oBAC1I,CAAC;oBAGD,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC;yBACvC,IAAI,CAAC,UAAA,CAAC,IAAM,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;yBAC5D,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC;yBACpB,IAAI,CAAC,gBAAgB,CAAC;yBACtB,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,sBAAsB,EAAE,IAAI,CAAC,kBAAkB,CAAC;yBACpE,IAAI,CAAC,UAAA,CAAC,IAAI,OAAA,OAAO,CAAC,CAAC,CAAC,EAAV,CAAU,CAAC,CACzB,OAAO,CAAC,CAAC,UAAA,CAAC,IAAM,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CACtE,OAAO,CAAC,CAAC,UAAU,CAAC;wBACjB,EAAE,CAAC,CAAC,CAAC,YAAY,uBAAuB,CAAC;4BAAC,MAAM,CAAC;wBACjD,IAAI;4BAAC,MAAM,CAAC,CAAC;oBACjB,CAAC,CAAC,CACG;gBACT,CAAC;gBACD,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,IAAI,MAAM,CAAC,CAAC,CAAC;oBACjC,IAAI,WAAW,GAAG,EAAE,CAAC;oBAErB,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,UAAA,CAAC,IAAM,WAAW,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBAEtE,EAAE,CAAC,CAAC,SAAS,CAAC;wBAAC,WAAW,CAAC,WAAW,CAAC,GAAG,SAAS,CAAC;oBAEpD,IAAI,OAAO,GAAG;wBACV,QAAQ,EAAE,kBAAkB;wBAC5B,cAAc,EAAE,kBAAkB;qBACrC,CAAC;oBAEF,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,aAAa,CAAC,CAAC,CAAC;wBAC1B,OAAO,CAAC,CAAC,CAAC,GAAG,aAAa,CAAC,CAAC,CAAC,CAAC;oBAClC,CAAC;oBAED,IAAI,OAAO,GAAW,IAAI,CAAC;oBAE3B,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,IAAI,OAAO,CAAC,CAAC,CAAC;wBAC/B,OAAO,GAAM,gBAAW,CAAC,SAAS,aAAQ,IAAI,CAAC,YAAY,SAAI,gBAAW,CAAC,YAAc,CAAC;wBAE1F,qCAAqC;wBACrC,EAAE,CAAC,CAAC,gBAAW,CAAC,QAAQ,CAAC,CAAC,CAAC;4BACvB,OAAO,GAAM,gBAAW,CAAC,SAAS,aAAQ,IAAI,CAAC,YAAY,SAAI,gBAAW,CAAC,QAAU,CAAC;wBAC1F,CAAC;oBACL,CAAC;oBACD,IAAI,CAAC,CAAC;wBACF,OAAO,GAAM,gBAAW,CAAC,SAAS,aAAQ,IAAI,CAAC,YAAY,SAAI,IAAI,CAAC,QAAQ,SAAI,gBAAW,CAAC,YAAY,SAAI,IAAI,CAAC,MAAM,SAAI,IAAI,CAAC,OAAS,CAAC;wBAE1I,qCAAqC;wBACrC,EAAE,CAAC,CAAC,gBAAW,CAAC,QAAQ,CAAC,CAAC,CAAC;4BACvB,OAAO,GAAM,gBAAW,CAAC,SAAS,aAAQ,IAAI,CAAC,YAAY,SAAI,gBAAW,CAAC,QAAQ,SAAI,IAAI,CAAC,MAAM,SAAI,IAAI,CAAC,OAAS,CAAC;wBACzH,CAAC;oBAEL,CAAC;oBAED,IAAI,CAAC,SAAS,CAAC,OAAO,EAChB;wBACE,MAAM,EAAE,MAAM;wBACd,OAAO,EAAE,OAAO;wBAChB,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC;qBACpC,EAAE,IAAI,CAAC,SAAS,CAAC;yBACjB,IAAI,CAAC,UAAA,CAAC,IAAM,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;yBAC5D,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC;yBACpB,IAAI,CAAC,gBAAgB,CAAC;yBACtB,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,sBAAsB,EAAE,IAAI,CAAC,kBAAkB,CAAC;yBACpE,IAAI,CAAC,UAAA,CAAC,IAAI,OAAA,OAAO,CAAC,CAAC,CAAC,EAAV,CAAU,CAAC,CACzB,OAAO,CAAC,CAAC,UAAA,CAAC,IAAM,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAC5D,OAAO,CAAC,CAAC,UAAU,CAAC;wBACjB,EAAE,CAAC,CAAC,CAAC,YAAY,uBAAuB,CAAC;4BAAC,MAAM,CAAC;wBACjD,IAAI;4BAAC,MAAM,CAAC,CAAC;oBACjB,CAAC,CAAC,CACG;gBACT,CAAC;gBACD,IAAI;oBAAC,MAAM,uBAAuB,GAAG,IAAI,CAAC,UAAU,CAAC;YAEzD,CAAC,CAAC,CAAC;QAEP,CAAC,EAAC,aAAa;QAGZ,mCAA8B,GAArC,UAAsC,EAAQ;YAC1C,IAAI,mBAAmB,GAAW,EAAE,CAAC,iBAAiB,EAAE,EACpD,UAAU,GAAQ,QAAQ,CAAM,IAAI,CAAC,GAAG,CAAC,mBAAmB,GAAG,EAAE,CAAC,CAAC,EACnE,UAAU,GAAQ,IAAI,CAAC,GAAG,CAAC,mBAAmB,GAAG,EAAE,CAAC,EACpD,iBAAiB,CAAC;YAEtB,EAAE,CAAC,CAAC,UAAU,GAAG,EAAE,CAAC;gBAAC,UAAU,GAAG,GAAG,GAAG,UAAU,CAAC;YAEnD,EAAE,CAAC,CAAC,UAAU,GAAG,EAAE,CAAC;gBAAC,UAAU,GAAG,GAAG,GAAG,UAAU,CAAC;YAEnD,qCAAqC;YACrC,2CAA2C;YAC3C,EAAE,CAAC,CAAC,mBAAmB,GAAG,CAAC,CAAC;gBAAC,iBAAiB,GAAG,GAAG,GAAG,UAAU,GAAG,GAAG,GAAG,UAAU,CAAC;YACrF,IAAI,CAAC,EAAE,CAAC,CAAC,mBAAmB,GAAG,CAAC,CAAC;gBAAC,iBAAiB,GAAG,GAAG,GAAG,UAAU,GAAG,GAAG,GAAG,UAAU,CAAC;YAC1F,IAAI,CAAC,EAAE,CAAC,CAAC,mBAAmB,IAAI,CAAC,CAAC;gBAAC,iBAAiB,GAAG,GAAG,CAAC;YAE3D,IAAI,YAAY,GAAQ,EAAE,CAAC,OAAO,EAAE,EAChC,aAAa,GAAQ,EAAE,CAAC,QAAQ,EAAE,GAAG,CAAC,EACtC,YAAY,GAAQ,EAAE,CAAC,WAAW,EAAE,EACpC,WAAW,GAAQ,EAAE,CAAC,QAAQ,EAAE,EAChC,YAAY,GAAQ,EAAE,CAAC,UAAU,EAAE,EACnC,YAAY,GAAQ,EAAE,CAAC,UAAU,EAAE,EACnC,gBAAgB,CAAC;YAErB,sEAAsE;YACtE,YAAY,GAAG,YAAY,GAAG,EAAE,GAAG,GAAG,GAAG,YAAY,GAAG,YAAY,CAAC;YACrE,aAAa,GAAG,aAAa,GAAG,EAAE,GAAG,GAAG,GAAG,aAAa,GAAG,aAAa,CAAC;YACzE,WAAW,GAAG,WAAW,GAAG,EAAE,GAAG,GAAG,GAAG,WAAW,GAAG,WAAW,CAAC;YACjE,YAAY,GAAG,YAAY,GAAG,EAAE,GAAG,GAAG,GAAG,YAAY,GAAG,YAAY,CAAC;YACrE,YAAY,GAAG,YAAY,GAAG,EAAE,GAAG,GAAG,GAAG,YAAY,GAAG,YAAY,CAAC;YAErE,MAAM,CAAC,YAAY,GAAG,GAAG,GAAG,aAAa,GAAG,GAAG,GAAG,YAAY,GAAG,GAAG,GAAG,WAAW,GAAG,GAAG,GAAG,YAAY,GAAG,GAAG,GAAG,YAAY,GAAG,iBAAiB,CAAC;QACrJ,CAAC;QAIM,cAAS,GAAhB,UAAiB,GAAqB,EAChC,IAAwB,EACxB,SAAiC;YAEnC,MAAM,CAAC,IAAI,OAAO,CAAW,UAAC,OAAO,EAAE,MAAM;gBAEzC,EAAE,CAAC,CAAC,gBAAW,CAAC,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC;oBAE1B,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC;wBAAC,IAAI,GAAG,EAAE,CAAC;oBACrB,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC;wBAAC,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;oBAErC,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,GAAG,YAAU,gBAAW,CAAC,GAAG,CAAC,YAAc,CAAC;gBAC7E,CAAC;gBAED,kCAAkC;gBAClC,EAAE,CAAC,CAAC,IAAI,IAAI,IAAI,CAAC;oBAAC,IAAI,GAAG,SAAS,CAAC;gBAEnC,KAAK,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,IAAI,CAAC,UAAC,CAAM;oBACzB,CAAC,CAAC,KAAK,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC;oBACnC,OAAO,CAAC,CAAC,CAAC,CAAC;oBACX,MAAM,CAAC,CAAC,CAAC;gBACb,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,UAAA,GAAG;oBACX,uFAAuF;oBACvF,GAAG,CAAC,KAAK,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC;oBACrC,MAAM,CAAC,GAAG,CAAC,CAAC;oBACZ,MAAM,CAAC,GAAG,CAAC;gBACf,CAAC,CAAC,CAAC,IAAI,CAAC,UAAA,CAAC;oBACL,OAAO,CAAM,CAAC,CAAC,CAAC;oBAEhB,EAAE,CAAC,CAAC,SAAS,CAAC;wBAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC;oBAEtD,MAAM,CAAC,CAAC,CAAC;gBACb,CAAC,CAAC,CAAC;YACP,CAAC,CAAC,CAAC;QACP,CAAC;QAEM,wBAAmB,GAA1B,UAA2B,MAAW,EAAE,SAAiC;YAAzE,iBASC;YARG,EAAE,CAAC,CAAC,CAAC,SAAS,IAAI,SAAS,CAAC,MAAM,IAAI,CAAC,CAAC;gBAAC,MAAM,CAAC,MAAM,CAAC;YAEvD,SAAS,CAAC,OAAO,CAAC,UAAA,EAAE;gBAChB,EAAE,CAAC,CAAC,OAAO,EAAE,KAAK,UAAU,CAAC,CAAC,CAAC;oBAC3B,EAAE,CAAC,IAAI,CAAC,KAAI,EAAE,MAAM,CAAC,CAAC;gBAC1B,CAAC;YAEL,CAAC,CAAC,CAAC;QACP,CAAC;QAEM,oBAAe,GAAtB,UAAuB,QAAwB,EAAE,OAAuB;YAEpE,QAAQ,CAAC,kBAAkB,GAAG,IAAI,CAAC;YACnC,EAAE,CAAC,CAAC,QAAQ,CAAC,MAAM,IAAI,GAAG,IAAI,QAAQ,CAAC,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC;gBAClD,MAAM,CAAC,QAAQ,CAAC;YACpB,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,IAAI,WAAW,GAAG,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;gBAEvD,IAAI,cAAY,GAAW,IAAI,CAAC;gBAEhC,EAAE,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC;oBAAC,cAAY,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;gBAElE,yBAAyB;gBACzB,EAAE,CAAC,CAAC,WAAW,IAAI,WAAW,CAAC,OAAO,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;oBAChE,MAAM,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,UAAU,IAAI;wBACtC,OAAE,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,EAAE,mBAAmB,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC;wBAEpE,EAAE,CAAC,CAAC,OAAO,IAAI,OAAO,CAAC,gBAAgB,CAAC,CAAC,CAAC;4BACtC,OAAE,CAAC,eAAe,CAAC,IAAI,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;wBACxD,CAAC;wBAED,MAAM,IAAI,CAAC;oBACf,CAAC,CAAC,CAAC;gBACP,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACJ,MAAM,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,UAAU,IAAI;wBACtC,OAAE,CAAC,WAAW,CAAC,IAAI,EAAE,sBAAsB,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC;wBAE/D,EAAE,CAAC,CAAC,OAAO,IAAI,OAAO,CAAC,gBAAgB,CAAC,CAAC,CAAC;4BACtC,OAAE,CAAC,eAAe,CAAC,IAAI,KAAK,CAAC,IAAI,CAAC,EAAE,EAAE,MAAM,EAAE,oBAAoB,EAAE,KAAK,EAAE,cAAY,EAAE,CAAC,CAAC;wBAC/F,CAAC;wBAED,MAAM,QAAQ,CAAC;oBACnB,CAAC,CAAC,CAAC;gBACP,CAAC;YACL,CAAC;QACL,CAAC;QAEM,cAAS,GAAhB,UAAiB,QAAQ;YACrB,MAAM,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,UAAC,IAAW;gBACpC,mEAAmE;gBACnE,EAAE,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,QAAQ,IAAI,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;oBAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;gBACtG,MAAM,CAAC,IAAI,CAAC;YAChB,CAAC,CAAC,CAAC;QACP,CAAC;QAEM,eAAU,GAAjB,UAAkB,EAAO,EAAE,OAAuB;YAE9C,EAAE,CAAC,CAAC,EAAE,YAAY,uBAAuB,CAAC,CAAC,CAAC;gBACxC,EAAE,CAAC,OAAO,GAAG,IAAI,CAAC,CAAC,GAAG;gBACtB,6HAA6H;gBAC7H,qFAAqF;gBACrF,MAAM,EAAE,CAAC;YACb,CAAC;YACD,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,YAAY,SAAS,CAAC,CACjC,CAAC;gBACG,MAAM,EAAE,CAAC;YACb,CAAC;YAED,EAAE,CAAC,CAAC,OAAO,CAAC,EAAE,CAAC,kBAAkB,CAAC,IAAI,WAAW,IAAI,CAAC,EAAE,CAAC,kBAAkB,CAAC,CAAC,CAAC;gBAC1E,gKAAgK;gBAEhK,IAAI,YAAY,GAAG,IAAI,CAAC;gBAExB,EAAE,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC;oBAAC,YAAY,GAAG,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC;gBAEtD,EAAE,CAAC,CAAC,OAAO,IAAI,OAAO,CAAC,gBAAgB,CAAC,CAAC,CAAC;oBACtC,OAAE,CAAC,eAAe,CAAC,IAAI,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,MAAM,EAAE,YAAY,EAAE,KAAK,EAAE,YAAY,EAAE,CAAC,CAAC;gBACrG,CAAC;gBAED,IAAI,GAAG,GAAG,EAAE,CAAC;gBAEb,EAAE,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC;oBAAC,GAAG,GAAG,EAAE,CAAC,OAAO,CAAC;gBAGjC,MAAM,CAAC,GAAG,CAAC;YACf,CAAC;YAED,MAAM,CAAC,EAAE,CAAC;QACd,CAAC;QAEM,uBAAkB,GAAzB,UAA0B,IAAI;YAE1B,kDAAkD;YAClD,EAAE,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,QAAQ,IAAI,OAAO,CAAC,IAAI,CAAC,cAAc,CAAC,KAAK,WAAW,CAAC,CAAC,CAAC;gBAE7E,IAAI,WAAW,GAAG,IAAI,CAAC;gBAEvB,MAAM,CAAC,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC;oBACvB,KAAK,eAAe,CAAC,OAAO;wBACxB,MAAM,CAAC,WAAW,CAAC;oBACvB,KAAK,eAAe,CAAC,OAAO;wBACxB,OAAE,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;wBAC7B,KAAK,CAAC;oBACV,KAAK,eAAe,CAAC,gBAAgB;wBACjC,OAAE,CAAC,WAAW,CAAC,WAAW,CAAC,OAAO,EAAE,WAAW,CAAC,KAAK,CAAC,CAAC;wBACvD,MAAM,IAAI,uBAAuB,EAAE,CAAC;oBACxC,KAAK,eAAe,CAAC,SAAS;wBAC1B,OAAE,CAAC,eAAe,CAAC,WAAW,CAAC,CAAC;wBAChC,MAAM,IAAI,uBAAuB,EAAE,CAAC;gBAC5C,CAAC;gBAGD,MAAM,CAAC,WAAW,CAAC;YACvB,CAAC;YACD,IAAI,CAAC,CAAC;gBACF,MAAM,CAAC,IAAI,CAAC;YAChB,CAAC;QAEL,CAAC;QAGD,WAAC;IAAD,CAAC,AAlWD,IAkWC;IAcD;QAUI;YAAY,kBAAoB;iBAApB,UAAoB,EAApB,qBAAoB,EAApB,IAAoB;gBAApB,6BAAoB;;YALzB,cAAS,GAAY,KAAK,CAAC;YAM9B,EAAE,CAAC,CAAC,QAAQ,CAAC,MAAM,IAAI,CAAC,CAAC,CAAC,CAAC;gBACvB,MAAM,sDAAsD,CAAC;YACjE,CAAC;YAED,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,QAAQ,CAAC,CAAC,CAAC;gBACrB,EAAE,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,YAAY,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;oBACxC,MAAM,6CAA6C,CAAC;gBACxD,CAAC;YACL,CAAC;YAED,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC;QAChC,CAAC;QAEM,sBAAM,GAAb,UAAc,EAAmB;YAC7B,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC;gBAAC,IAAI,CAAC,gBAAgB,GAAG,EAAE,CAAC;YAEvD,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;YAE/B,MAAM,CAAC,IAAI,CAAC;QAChB,CAAC;QAEM,oBAAI,GAAX,UAAY,OAAuC;YAAnD,iBAwDC;YAvDG,mBAAmB;YACnB,IAAI,QAAQ,GAAkB;gBAC1B,gBAAgB,EAAE,IAAI;gBACtB,sBAAsB,EAAE,IAAI;gBAC5B,gBAAgB,EAAE,IAAI;gBACtB,wBAAwB,EAAE,IAAI;gBAC9B,uBAAuB,EAAE,EAAE;aAC9B,CAAC;YAEF,OAAO,GAAG,OAAO,IAAI,EAAE,CAAC;YAExB,QAAQ,GAAG,OAAE,CAAC,MAAM,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;YAExC,IAAI,SAAS,GAAG,WAAW,CAAC,GAAG,EAAE,CAAC;YAClC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YAEtB,IAAI,KAAK,GAAG,EAAE,CAAC;YAEf,GAAG,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,EAAE,EAAE,EAAE,CAAC;gBAClD,KAAK,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC,aAAa,EAAE,EAAE,CAAC,CAAC;YAC1E,CAAC;YAED,IAAI,YAAY,GAAU,EAAE,CAAC;YAE7B,QAAQ,CAAC,YAAY,CAAC,GAAG,KAAK,CAAC;YAC/B,YAAY,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;YAEhC,6HAA6H;YAC7H,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC;gBACnB,YAAY,EAAE,OAAO;gBACrB,UAAU,EAAE,MAAM;gBAClB,YAAY,EAAE,YAAY;gBAC1B,OAAO,EAAE,QAAQ;gBACjB,SAAS,EAAE,IAAI,CAAC,gBAAgB;aACnC,CAAC;iBACG,IAAI,CAAC,UAAA,CAAC;gBACH,KAAI,CAAC,iBAAiB,GAAG,WAAW,CAAC,GAAG,EAAE,GAAG,SAAS,CAAC;gBACvD,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;gBAEvB,GAAG,CAAC,CAAC,IAAI,IAAE,GAAG,CAAC,EAAE,IAAE,GAAG,KAAI,CAAC,WAAW,CAAC,MAAM,EAAE,IAAE,EAAE,EAAE,CAAC;oBAClD,IAAI,OAAO,GAAG,KAAI,CAAC,WAAW,CAAC,IAAE,CAAC,CAAC;oBAEnC,IAAI,WAAW,GAAG,gBAAgB,CAAC,CAAC,CAAC,IAAI,CAAC,IAAE,CAAC,CAAC,CAAC;oBAE/C,IAAI,CAAC;wBACD,qCAAqC;wBACrC,IAAI,CAAC,kBAAkB,CAAC,WAAW,CAAC,CAAC;oBACzC,CAAC;oBACD,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAuB,CAAC;oBAEpC,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;gBAC1C,CAAC;gBAED,MAAM,CAAC,CAAC,CAAC;YACb,CAAC,CAAC,CAAC;QACX,CAAC;QAGL,YAAC;IAAD,CAAC,AA3FD,IA2FC;IA3FY,WAAK,QA2FjB,CAAA;IAED;QAKI;YAAA,iBAKC;YAJG,IAAI,CAAC,OAAO,GAAG,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;gBACvC,KAAI,CAAC,MAAM,GAAG,MAAM,CAAA;gBACpB,KAAI,CAAC,OAAO,GAAG,OAAO,CAAA;YAC1B,CAAC,CAAC,CAAA;QACN,CAAC;QACL,eAAC;IAAD,CAAC,AAXD,IAWC;IAXY,cAAQ,WAWpB,CAAA;IAED,UAAmB,4BAA4B;QA2D3C,eAAY,MAAc,EAAE,OAAe,EAAE,MAAiB,EAAE,OAAuB;YAtCvF,sCAAsC;YAC/B,aAAQ,GAAa,IAAI,CAAC;YAKzB,WAAM,GAAW,IAAI,CAAC;YACtB,YAAO,GAAW,IAAI,CAAC;YACvB,kBAAa,GAAa,IAAI,CAAC;YAOhC,cAAS,GAAY,KAAK,CAAC;YAwB9B,IAAI,CAAC,QAAQ,GAAG,IAAI,QAAQ,EAAE,CAAC;YAE/B,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;YACrB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;YACvB,IAAI,CAAC,aAAa,GAAG,MAAM,CAAC;YAC5B,IAAI,CAAC,kBAAkB,GAAG,OAAO,CAAC;QACtC,CAAC;QAxDa,qBAAe,GAA7B,UAA8B,GAAkB;YAC5C,OAAO,CAAC,GAAG,CAAC,uBAAuB,EAAE,KAAK,CAAC,YAAY,CAAC,CAAC;YAEzD,GAAG,CAAC,CAAC,IAAI,IAAI,IAAI,GAAG,CAAC,CAAC,CAAC;gBACnB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC;YACxC,CAAC;YAED,OAAO,CAAC,GAAG,CAAC,mBAAmB,EAAE,KAAK,CAAC,YAAY,CAAC,CAAC;QACzD,CAAC;QAuBD,iFAAiF;QACnE,oBAAc,GAA5B,UAA6B,GAAQ;YACjC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC;gBAAC,MAAM,CAAC,KAAK,CAAC;YACvB,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,KAAK,UAAU,IAAI,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,KAAK,QAAQ,IAAI,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,KAAK,QAAQ,CAAC;QACjI,CAAC;QAEM,6BAAa,GAApB;YACI,MAAM,CAAC;gBACH,QAAQ,EAAE,IAAI,CAAC,QAAQ;gBACvB,YAAY,EAAE,gBAAW,CAAC,YAAY;gBACtC,MAAM,EAAE,IAAI,CAAC,MAAM;gBACnB,OAAO,EAAE,IAAI,CAAC,OAAO;gBACrB,MAAM,EAAE,IAAI,CAAC,kBAAkB;gBAC/B,OAAO,EAAE,IAAI,CAAC,eAAe;gBAC7B,QAAQ,EAAE,IAAI,CAAC,UAAU;aAC5B,CAAC;QACN,CAAC;QAWM,oBAAI,GAAX;YAAY,cAAO;iBAAP,UAAO,EAAP,qBAAO,EAAP,IAAO;gBAAP,yBAAO;;YACf,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;QACzE,CAAC;QAEM,sBAAM,GAAb,UAAc,EAAmB;YAC7B,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC;gBAAC,IAAI,CAAC,gBAAgB,GAAG,EAAE,CAAC;YAEvD,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;YAE/B,MAAM,CAAC,IAAI,CAAC;QAChB,CAAC;QAES,2BAAW,GAArB,UAAsB,YAAoB,EAAE,OAAuB;YAAnE,iBAgDC;YA9CG,EAAE,CAAC,CAAC,CAAC,YAAY,IAAI,YAAY,IAAI,EAAE,CAAC;gBACpC,MAAM,IAAI,KAAK,CAAC,yFAAyF,CAAC,CAAC;YAE/G,mBAAmB;YACnB,IAAI,QAAQ,GAAkB,KAAK,CAAC,YAAY,CAAC;YAEjD,IAAI,YAAY,GAAU,EAAE,CAAC;YAE7B,OAAO,GAAG,OAAO,IAAI,EAAE,CAAC;YACxB,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,kBAAkB,IAAI,EAAE,CAAC;YAGxD,OAAO,GAAG,OAAE,CAAC,MAAM,CAAC,OAAO,EAAE,IAAI,CAAC,kBAAkB,CAAC,CAAC;YACtD,QAAQ,GAAG,OAAE,CAAC,MAAM,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;YACxC,0DAA0D;YAE1D,+CAA+C;YAC/C,gCAAgC;YAEhC,2EAA2E;YAC3E,EAAE,CAAC,CAAC,OAAO,IAAI,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC;gBAChC,YAAY,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,UAAA,QAAQ;oBAC7C,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,SAAS,CAAC;gBAC3C,CAAC,CAAC,CAAC;YACP,CAAC;YAED,EAAE,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC;gBAAC,QAAQ,CAAC,OAAO,GAAG,IAAI,CAAC,eAAe,CAAC;YAClE,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC;gBAAC,QAAQ,CAAC,QAAQ,GAAG,IAAI,CAAC,UAAU,CAAC;YAEzD,IAAI,SAAS,GAAG,WAAW,CAAC,GAAG,EAAE,CAAC;YAClC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YAEtB,iJAAiJ;YACjJ,4IAA4I;YAE5I,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC;gBACnB,YAAY,EAAE,YAAY;gBAC1B,UAAU,EAAE,QAAQ,CAAC,UAAU;gBAC/B,QAAQ,EAAE,IAAI,CAAC,QAAQ;gBACvB,MAAM,EAAE,IAAI,CAAC,MAAM;gBACnB,OAAO,EAAE,IAAI,CAAC,OAAO;gBACrB,YAAY,EAAE,YAAY;gBAC1B,OAAO,EAAE,QAAQ;gBACjB,SAAS,EAAE,IAAI,CAAC,gBAAgB;aACnC,CAAC;iBACG,IAAI,CAAC,UAAA,CAAC,IAAM,KAAI,CAAC,iBAAiB,GAAG,WAAW,CAAC,GAAG,EAAE,GAAG,SAAS,CAAC,CAAC,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC,CAAC,KAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC5I,CAAC;QAEM,yBAAS,GAAhB,UAAiB,OAAuB;YACpC,OAAO,GAAG,OAAE,CAAC,MAAM,CAAC,EAAE,UAAU,EAAE,KAAK,EAAE,EAAE,OAAO,CAAC,CAAC,CAAC,+BAA+B;YACpF,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;QAC7C,CAAC;QAEM,4BAAY,GAAnB,UAAoB,OAAuB;YACvC,OAAO,GAAG,OAAE,CAAC,MAAM,CAAC,EAAE,UAAU,EAAE,MAAM,EAAE,EAAE,OAAO,CAAC,CAAC,CAAC,mCAAmC;YACzF,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;QAC/C,CAAC;QAEM,gCAAgB,GAAvB,UAAwB,OAAuB;YAC3C,OAAO,GAAG,OAAE,CAAC,MAAM,CAAC,EAAE,UAAU,EAAE,KAAK,EAAE,EAAE,OAAO,CAAC,CAAC;YACpD,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC,IAAI,CAAC,UAAA,CAAC;gBAE3C,EAAE,CAAC,CAAC,CAAC,IAAI,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,WAAW,IAAI,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,WAAW,CAAC,CAAC,CAAC;oBAEjF,IAAI,EAAE,GAAG,IAAI,CAAC;oBACd,IAAI,EAAE,GAAG,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC;oBAC5B,sDAAsD;oBACtD,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC;wBAAC,EAAE,GAAG,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;oBAEpD,gCAAgC;oBAChC,OAAO,CAAC,CAAC,IAAI,CAAC;oBAEd,CAAC,CAAC,IAAI,GAAG,EAAE,WAAW,EAAE,EAAE,EAAE,MAAM,EAAE,EAAE,EAAE,CAAC;oBAEzC,MAAM,CAAC,CAAC,CAAC;gBACb,CAAC;gBAED,MAAM,CAAC,CAAC,CAAC;YAEb,CAAC,CAAC,CAAC;QACP,CAAC;QAGD,oBAAoB;QACpB,qCAAqC;QACrC,iCAAiC;QAC1B,sBAAM,GAAb;YAAc,oBAAyB;iBAAzB,UAAyB,EAAzB,qBAAyB,EAAzB,IAAyB;gBAAzB,+BAAyB;;YACnC,EAAE,CAAC,CAAC,UAAU,CAAC,MAAM,IAAI,IAAI,CAAC;gBAAC,MAAM,CAAC,IAAI,CAAC;YAE3C,IAAI,CAAC,eAAe,GAAG,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YAC5C,MAAM,CAAC,IAAI,CAAC;QAChB,CAAC;QAEM,uBAAO,GAAd,UAAe,oBAA4B;YACvC,IAAI,CAAC,UAAU,GAAG,oBAAoB,CAAC;YACvC,MAAM,CAAC,IAAI,CAAC;QAChB,CAAC;QAEL,YAAC;IAAD,CAAC,AApLD;IAEmB,kBAAY,GAAkB;QACzC,gBAAgB,EAAE,IAAI;QACtB,sBAAsB,EAAE,IAAI;QAC5B,gBAAgB,EAAE,IAAI;QACtB,wBAAwB,EAAE,IAAI;QAC9B,uBAAuB,EAAE,EAAE;KAC9B,CAAC;IARO,WAAK,QAoLjB,CAAA;IAED;QAAyB,uBAAK;QAA9B;;QASA,CAAC;QARU,kBAAI,GAAX,UAAY,OAAuB;YAC/B,OAAO,GAAG,OAAE,CAAC,MAAM,CAAC,EAAE,UAAU,EAAE,KAAK,EAAE,EAAE,OAAO,CAAC,CAAC;YACpD,MAAM,CAAC,iBAAM,WAAW,YAAC,YAAY,EAAE,OAAO,CAAC,CAAC,IAAI,CAAC,UAAA,CAAC;gBAClD,iCAAiC;gBACjC,EAAE,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;oBAAC,MAAM,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;gBACtC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC;YAClB,CAAC,CAAC,CAAC;QACP,CAAC;QACL,UAAC;IAAD,CAAC,AATD,CAAyB,KAAK,GAS7B;IATY,SAAG,MASf,CAAA;IAGD;QAAA;QAKA,CAAC;QAHkB,wBAAQ,GAAvB;YACI,MAAM,CAAI,eAAe,CAAC,aAAa,qBAAkB,CAAC;QAC9D,CAAC;QACL,sBAAC;IAAD,CAAC,AALD;IACmB,6BAAa,GAAW,SAAS,CAAC;IADxC,qBAAe,kBAK3B,CAAA;AACL,CAAC,EA3uBa,KAAK,GAAL,aAAK,KAAL,aAAK,QA2uBlB;AAED,uBAAuB","sourcesContent":["import { L2, jsDALServer } from \"./L2\";\r\n\r\n//L2 = window[\"L2\"] || L2;\r\n\r\ninterface Error {\r\n    response: any;\r\n}\r\n\r\n\r\n\r\nexport module jsDAL {\r\n\r\n\r\n\r\n    enum ApiResponseType {\r\n        Unknown = 0,\r\n        Success = 1,\r\n        InfoMsg = 10,\r\n        ExclamationModal = 20,\r\n        Error = 30,\r\n        Exception = 40\r\n    }\r\n\r\n    class ApiResponse {\r\n        Message: string;\r\n        Title: string;\r\n        Type: ApiResponseType;\r\n        Data: any;\r\n    }\r\n\r\n    class ApiResponseEndThenChain { handled: boolean; }\r\n\r\n    if (typeof ((<any>Promise).prototype.ifthen) == \"undefined\") {\r\n        (<any>Promise).prototype.ifthen = function (cond, cb) {\r\n            //if (cond) return this.then(cb);  \r\n            return this.then(r => {\r\n                if (cond) return cb(r);\r\n                else return r;\r\n            });\r\n        }\r\n    }\r\n\r\n    export interface IExecDefaults {\r\n        AutoSetTokenGuid?: boolean;\r\n        AutoProcessApiResponse?: boolean;\r\n        HandleExceptions?: boolean;\r\n        ShowPageLoadingIndicator?: boolean;\r\n        CommandTimeoutInSeconds?: number; // SQL Command timeout\r\n        $select?: string;\r\n        $captcha?: string;\r\n        HttpMethod?: string;\r\n    }\r\n\r\n    export function transformResults(r) {\r\n\r\n        if (typeof (r.Data) === \"undefined\") return r;\r\n\r\n        for (var e in r.Data) {\r\n\r\n            if (!(e.substring(0, 5) == \"Table\")) continue;\r\n\r\n            var dt = r.Data[e];\r\n\r\n            var transformed = [];\r\n\r\n            for (var rowIx = 0; rowIx < dt.Data.length; rowIx++) {\r\n\r\n                var newRowObject = {};\r\n\r\n                for (var colIx = 0; colIx < dt.Data[rowIx].length; colIx++) {\r\n                    // TODO: Add support for DateTime fields?\r\n                    newRowObject[dt.Fields[colIx].name] = dt.Data[rowIx][colIx];\r\n                }\r\n\r\n                transformed.push(newRowObject);\r\n            }\r\n\r\n            r.Data[e] = transformed;\r\n        }\r\n\r\n        return r;\r\n    }\r\n    \r\n    class Exec {\r\n        static ExecGlobal(exec: IExecGlobalOptions): Promise<any> {\r\n\r\n            return new Promise((resolve, reject) => {\r\n                // create query string based on routine parameters\r\n                var parmQueryStringArray: any[] = exec.mappedParams.map(p => {\r\n                    var parmValue = exec.options[p];\r\n\r\n                    // serialize Date/moment objects to ISO string format\r\n                    if (typeof (moment) != \"undefined\" && moment.isMoment(parmValue)) {\r\n                        parmValue = Exec.ConvertDateToISOWithTimeOffset(parmValue.toDate()); //parmValue.toDate().toISOString();\r\n                    }\r\n                    else if (parmValue instanceof Date) {\r\n                        //parmValue = parmValue.toISOString();\r\n                        parmValue = Exec.ConvertDateToISOWithTimeOffset(parmValue);\r\n                    }\r\n\r\n                    if (parmValue != null) {\r\n                        return encodeURIComponent(p) + \"=\" + encodeURIComponent(parmValue)\r\n                    }\r\n                    else {\r\n                        return encodeURIComponent(p) + \"=$jsDAL$.DBNull\";\r\n                    }\r\n                });\r\n\r\n\r\n                let tokenGuid: string = null;\r\n                let customHeaders: { [key: string]: string } = {};\r\n\r\n                if (exec.options) {\r\n                    if (exec.options.AutoSetTokenGuid) {\r\n                        tokenGuid = window[\"TokenGuid\"];\r\n\r\n                        // TODO: Consider moving this to the custom header array\r\n                        if (tokenGuid) parmQueryStringArray.push(\"tokenGuid=\" + tokenGuid);\r\n                    }\r\n\r\n                    // TODO: Consider moving this to the custom header array\r\n                    if (exec.options.$select) parmQueryStringArray.push(\"$select=\" + exec.options.$select);\r\n                    //if (options.$captcha) parmQueryStringArray.push(\"$captcha=\" + options.$captcha);\r\n                    if (exec.options.$captcha) {\r\n                        customHeaders[\"captcha-val\"] = exec.options.$captcha;\r\n                    }\r\n\r\n                }\r\n\r\n                var parmQueryString = parmQueryStringArray.join(\"&\");\r\n\r\n                if (parmQueryString && parmQueryString.length > 0 && parmQueryString != \"\") parmQueryString = \"?\" + parmQueryString;\r\n                else parmQueryString = \"\";\r\n\r\n                if (jsDALServer.overridingDbSource) exec.dbSource = jsDALServer.overridingDbSource;\r\n\r\n                if (jsDALServer.applicationTitle) {\r\n                    customHeaders[\"App-Title\"] = jsDALServer.applicationTitle;\r\n                }\r\n\r\n                if ([\"exec\", \"execnq\", \"execScalar\", \"batch\"].indexOf(exec.execFunction) == -1) {\r\n                    throw new Error(`Invalid execution method specified: ${exec.execFunction}`);\r\n                }\r\n\r\n                // GET\r\n                if (exec.httpMethod == \"GET\") {\r\n                    let headers = null;\r\n\r\n                    if (customHeaders && Object.keys(customHeaders).length > 0) {\r\n                        if (headers == null) headers = {};\r\n                        for (let e in customHeaders) {\r\n                            headers[e] = customHeaders[e];\r\n                        }\r\n                    }\r\n\r\n                    let init = null;\r\n\r\n                    if (headers) {\r\n                        init = { headers: headers };\r\n                    }\r\n\r\n                    let getUrl: string = `${jsDALServer.serverUrl}/api/${exec.execFunction}/${exec.dbSource}/${jsDALServer.dbConnection}/${exec.schema}/${exec.routine}${parmQueryString}`;\r\n\r\n                    // endpoint overrides everything else\r\n                    if (jsDALServer.endpoint) {\r\n                        getUrl = `${jsDALServer.serverUrl}/api/${exec.execFunction}/${jsDALServer.endpoint}/${exec.schema}/${exec.routine}${parmQueryString}`;\r\n                    }\r\n\r\n\r\n                    Exec.fetchWrap(getUrl, init, exec.alwaysCBs)\r\n                        .then(r => { return Exec.checkHttpStatus(r, exec.options); })\r\n                        .then(Exec.parseJSON)\r\n                        .then(transformResults)\r\n                        .ifthen(exec.options.AutoProcessApiResponse, Exec.processApiResponse)\r\n                        .then(r => resolve(r))\r\n                    [\"catch\"](r => { reject(Exec.fetchCatch(r, exec.options)); return r; })\r\n                    [\"catch\"](function (e) {\r\n                        if (e instanceof ApiResponseEndThenChain) return;\r\n                        else throw e;\r\n                    })\r\n                        ;\r\n                }\r\n                else if (exec.httpMethod == \"POST\") {\r\n                    var bodyContent = {};\r\n\r\n                    exec.mappedParams.forEach(p => { bodyContent[p] = exec.options[p]; });\r\n\r\n                    if (tokenGuid) bodyContent[\"tokenGuid\"] = tokenGuid;\r\n\r\n                    let headers = {\r\n                        'Accept': 'application/json',\r\n                        'Content-Type': 'application/json'\r\n                    };\r\n\r\n                    for (let e in customHeaders) {\r\n                        headers[e] = customHeaders[e];\r\n                    }\r\n\r\n                    let postUrl: string = null;\r\n\r\n                    if (exec.execFunction == \"batch\") {\r\n                        postUrl = `${jsDALServer.serverUrl}/api/${exec.execFunction}/${jsDALServer.dbConnection}`;\r\n\r\n                        // endpoint overrides everything else\r\n                        if (jsDALServer.endpoint) {\r\n                            postUrl = `${jsDALServer.serverUrl}/api/${exec.execFunction}/${jsDALServer.endpoint}`;\r\n                        }\r\n                    }\r\n                    else {\r\n                        postUrl = `${jsDALServer.serverUrl}/api/${exec.execFunction}/${exec.dbSource}/${jsDALServer.dbConnection}/${exec.schema}/${exec.routine}`;\r\n\r\n                        // endpoint overrides everything else\r\n                        if (jsDALServer.endpoint) {\r\n                            postUrl = `${jsDALServer.serverUrl}/api/${exec.execFunction}/${jsDALServer.endpoint}/${exec.schema}/${exec.routine}`;\r\n                        }\r\n\r\n                    }\r\n                    \r\n                    Exec.fetchWrap(postUrl\r\n                        , {\r\n                            method: 'POST',\r\n                            headers: headers,\r\n                            body: JSON.stringify(bodyContent)\r\n                        }, exec.alwaysCBs)\r\n                        .then(r => { return Exec.checkHttpStatus(r, exec.options); })\r\n                        .then(Exec.parseJSON)\r\n                        .then(transformResults)\r\n                        .ifthen(exec.options.AutoProcessApiResponse, Exec.processApiResponse)\r\n                        .then(r => resolve(r))\r\n                    [\"catch\"](r => { reject(Exec.fetchCatch(r, exec.options)); })\r\n                    [\"catch\"](function (e) {\r\n                        if (e instanceof ApiResponseEndThenChain) return;\r\n                        else throw e;\r\n                    })\r\n                        ;\r\n                }\r\n                else throw \"Invalid HTTP method: \" + exec.httpMethod;\r\n\r\n            });\r\n\r\n        } // ExecGlobal\r\n\r\n        \r\n    static ConvertDateToISOWithTimeOffset(dt: Date): string { // http://usefulangle.com/post/30/javascript-get-date-time-with-offset-hours-minutes\r\n        let timezone_offset_min: number = dt.getTimezoneOffset(),\r\n            offset_hrs: any = parseInt(<any>Math.abs(timezone_offset_min / 60)),\r\n            offset_min: any = Math.abs(timezone_offset_min % 60),\r\n            timezone_standard;\r\n\r\n        if (offset_hrs < 10) offset_hrs = '0' + offset_hrs;\r\n\r\n        if (offset_min < 10) offset_min = '0' + offset_min;\r\n\r\n        // Add an opposite sign to the offset\r\n        // If offset is 0, it means timezone is UTC\r\n        if (timezone_offset_min < 0) timezone_standard = '+' + offset_hrs + ':' + offset_min;\r\n        else if (timezone_offset_min > 0) timezone_standard = '-' + offset_hrs + ':' + offset_min;\r\n        else if (timezone_offset_min == 0) timezone_standard = 'Z';\r\n\r\n        let current_date: any = dt.getDate(),\r\n            current_month: any = dt.getMonth() + 1,\r\n            current_year: any = dt.getFullYear(),\r\n            current_hrs: any = dt.getHours(),\r\n            current_mins: any = dt.getMinutes(),\r\n            current_secs: any = dt.getSeconds(),\r\n            current_datetime;\r\n\r\n        // Add 0 before date, month, hrs, mins or secs if they are less than 0\r\n        current_date = current_date < 10 ? '0' + current_date : current_date;\r\n        current_month = current_month < 10 ? '0' + current_month : current_month;\r\n        current_hrs = current_hrs < 10 ? '0' + current_hrs : current_hrs;\r\n        current_mins = current_mins < 10 ? '0' + current_mins : current_mins;\r\n        current_secs = current_secs < 10 ? '0' + current_secs : current_secs;\r\n\r\n        return current_year + '-' + current_month + '-' + current_date + 'T' + current_hrs + ':' + current_mins + ':' + current_secs + timezone_standard;\r\n    }\r\n\r\n\r\n\r\n    static fetchWrap(url: string | Request\r\n        , init?: RequestInit | any\r\n        , alwaysCBs?: ((res: any) => any)[]): any | Promise<Response> {\r\n\r\n        return new Promise<Response>((resolve, reject) => {\r\n\r\n            if (jsDALServer.jwt != null) {\r\n\r\n                if (!init) init = {};\r\n                if (!init.headers) init.headers = {};\r\n\r\n                init.headers[\"Authorization\"] = `Bearer ${jsDALServer.jwt.access_token}`;\r\n            }\r\n\r\n            // iOS prefers undefined over null\r\n            if (init == null) init = undefined;\r\n\r\n            fetch(url, init).then((r: any) => {\r\n                r.fetch = { url: url, init: init };\r\n                resolve(r);\r\n                return r;\r\n            })[\"catch\"](err => {\r\n                // TODO: Figure out what to do here...zonejs fucks up any chance of a meaningful error.\r\n                err.fetch = { url: url, init: init };\r\n                reject(err);\r\n                return err;\r\n            }).then(r => {\r\n                resolve(<any>r);\r\n\r\n                if (alwaysCBs) Exec.callAlwaysCallbacks(r, alwaysCBs);\r\n\r\n                return r;\r\n            });\r\n        });\r\n    }\r\n\r\n    static callAlwaysCallbacks(result: any, alwaysCBs?: ((res: any) => any)[]) {\r\n        if (!alwaysCBs || alwaysCBs.length == 0) return result;\r\n\r\n        alwaysCBs.forEach(cb => {\r\n            if (typeof cb === \"function\") {\r\n                cb.call(this, result);\r\n            }\r\n\r\n        });\r\n    }\r\n\r\n    static checkHttpStatus(response: Response | any, options?: IExecDefaults): any {\r\n\r\n        response.hasReachedResponse = true;\r\n        if (response.status >= 200 && response.status < 300) {\r\n            return response;\r\n        } else {\r\n            var contentType = response.headers.get(\"content-type\");\r\n\r\n            let fetchDetails: string = null;\r\n\r\n            if (response.fetch) fetchDetails = JSON.stringify(response.fetch);\r\n\r\n            // look for a json result\r\n            if (contentType && contentType.indexOf(\"application/json\") !== -1) {\r\n                return response.json().then(function (json) {\r\n                    L2.exclamation(json.Message, \"Http status code \" + response.status);\r\n\r\n                    if (options && options.HandleExceptions) {\r\n                        L2.handleException(new Error(JSON.stringify(json)));\r\n                    }\r\n\r\n                    throw json;\r\n                });\r\n            } else {\r\n                return response.text().then(function (text) {\r\n                    L2.exclamation(text, \"Http status code 02 \" + response.status);\r\n\r\n                    if (options && options.HandleExceptions) {\r\n                        L2.handleException(new Error(text), { origin: \"checkHttpStatus 02\", fetch: fetchDetails });\r\n                    }\r\n\r\n                    throw response;\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    static parseJSON(response) {\r\n        return response.json().then((json:string) => {\r\n            // if still a string after parsing once and it *looks* like json...\r\n            if (typeof (json) === \"string\" && json.startsWith(\"{\") && json.endsWith(\"}\")) return JSON.parse(json);\r\n            return json;\r\n        });\r\n    }\r\n\r\n    static fetchCatch(ex: any, options?: IExecDefaults) {\r\n\r\n        if (ex instanceof ApiResponseEndThenChain) {\r\n            ex.handled = true; //?\r\n            // handle special case where we just threw an exception(ApiResponseEndThenChain) to end any remaining 'thens' on the promise.\r\n            // we have to rethrow to prevent any additional '.then' callbacks from being executed\r\n            throw ex;\r\n        }\r\n        else if (ex instanceof TypeError) // \"most likely\" network related\r\n        {\r\n            throw ex;\r\n        }\r\n\r\n        if (typeof (ex.hasReachedResponse) == \"undefined\" || !ex.hasReachedResponse) {\r\n            // we get here if no response was received from the fetch call, so the catch handler was called before checkHttpStatus. Mostly likely a network related problem.\r\n\r\n            var fetchDetails = null;\r\n\r\n            if (ex.fetch) fetchDetails = JSON.stringify(ex.fetch);\r\n\r\n            if (options && options.HandleExceptions) {\r\n                L2.handleException(new Error(JSON.stringify(ex)), { origin: \"fetchCatch\", fetch: fetchDetails });\r\n            }\r\n\r\n            var msg = ex;\r\n\r\n            if (ex.Message) msg = ex.Message;\r\n\r\n\r\n            return msg;\r\n        }\r\n\r\n        return ex;\r\n    }\r\n\r\n    static processApiResponse(json): Response {\r\n\r\n        // if the result is a string, test for ApiResponse\r\n        if (typeof (json) === \"object\" && typeof (json.ApiResponseVer) !== \"undefined\") {\r\n\r\n            let apiResponse = json;\r\n\r\n            switch (apiResponse.Type) {\r\n                case ApiResponseType.Success:\r\n                    return apiResponse;\r\n                case ApiResponseType.InfoMsg:\r\n                    L2.info(apiResponse.Message);\r\n                    break;\r\n                case ApiResponseType.ExclamationModal:\r\n                    L2.exclamation(apiResponse.Message, apiResponse.Title);\r\n                    throw new ApiResponseEndThenChain();\r\n                case ApiResponseType.Exception:\r\n                    L2.handleException(apiResponse);\r\n                    throw new ApiResponseEndThenChain();\r\n            }\r\n\r\n\r\n            return apiResponse;\r\n        }\r\n        else {\r\n            return json;\r\n        }\r\n\r\n    }\r\n\r\n\r\n    }\r\n\r\n    interface IExecGlobalOptions {\r\n        execFunction: string;\r\n        httpMethod: string;\r\n        dbSource?: string,\r\n        endpoint?: string;\r\n        schema?: string;\r\n        routine?: string;\r\n        mappedParams: any[];\r\n        options: IExecDefaults;\r\n        alwaysCBs?: ((res: any) => any)[];\r\n    }\r\n\r\n    export class Batch {\r\n\r\n        private routineList: Sproc[];\r\n\r\n        public lastExecutionTime: number;\r\n        public isLoading: boolean = false;\r\n\r\n        private _alwaysCallbacks: ((res: any) => any)[];\r\n\r\n\r\n        constructor(...routines: Sproc[]) {\r\n            if (routines.length == 0) {\r\n                throw \"You have to specify at least one routine to execute.\";\r\n            }\r\n\r\n            for (var e in routines) {\r\n                if (!(routines[e] instanceof jsDAL.Sproc)) {\r\n                    throw \"All arguments must derive from jsDAL.Sproc.\";\r\n                }\r\n            }\r\n\r\n            this.routineList = routines;\r\n        }\r\n\r\n        public always(cb: (...any) => any): Batch {\r\n            if (!this._alwaysCallbacks) this._alwaysCallbacks = [];\r\n\r\n            this._alwaysCallbacks.push(cb);\r\n\r\n            return this;\r\n        }\r\n\r\n        public Exec(options?: IExecDefaults & IExecDefaults): Promise<any> {\r\n            // default settings\r\n            let settings: IExecDefaults = {\r\n                AutoSetTokenGuid: true,\r\n                AutoProcessApiResponse: true,\r\n                HandleExceptions: true,\r\n                ShowPageLoadingIndicator: true,\r\n                CommandTimeoutInSeconds: 60\r\n            };\r\n\r\n            options = options || {};\r\n\r\n            settings = L2.extend(settings, options);\r\n\r\n            let startTick = performance.now();\r\n            this.isLoading = true;\r\n\r\n            let batch = [];\r\n\r\n            for (var ix = 0; ix < this.routineList.length; ix++) {\r\n                batch.push({ Ix: ix, Routine: this.routineList[ix].getExecPacket() });\r\n            }\r\n\r\n            var mappedParams: any[] = [];\r\n\r\n            settings[\"batch-data\"] = batch;\r\n            mappedParams.push(\"batch-data\");\r\n\r\n            ///return ExecGlobal(\"batch\", \"POST\"/*settings.HttpMethod*/, null, null, null, mappedParams, settings, this._alwaysCallbacks)\r\n            return Exec.ExecGlobal({\r\n                execFunction: \"batch\",\r\n                httpMethod: \"POST\",\r\n                mappedParams: mappedParams,\r\n                options: settings,\r\n                alwaysCBs: this._alwaysCallbacks\r\n            })\r\n                .then(r => {\r\n                    this.lastExecutionTime = performance.now() - startTick;\r\n                    this.isLoading = false;\r\n\r\n                    for (let ix = 0; ix < this.routineList.length; ix++) {\r\n                        var routine = this.routineList[ix];\r\n\r\n                        var transformed = transformResults(r.Data[ix]);\r\n\r\n                        try {\r\n                            //if (options.AutoProcessApiResponse)\r\n                            Exec.processApiResponse(transformed);\r\n                        }\r\n                        catch (ex) { /*ignore exceptions*/ }\r\n\r\n                        routine.deferred.resolve(transformed);\r\n                    }\r\n\r\n                    return r;\r\n                });\r\n        }\r\n\r\n\r\n    }\r\n\r\n    export class Deferred {\r\n        public promise: Promise<any>;\r\n        public resolve: (value?: any | PromiseLike<any>) => void;\r\n        public reject: (error?: any) => void;\r\n\r\n        constructor() {\r\n            this.promise = new Promise((resolve, reject) => {\r\n                this.reject = reject\r\n                this.resolve = resolve\r\n            })\r\n        }\r\n    }\r\n\r\n    export class Sproc /*implements Thenable<any>*/ {\r\n\r\n        private static _exeDefaults: IExecDefaults = {\r\n            AutoSetTokenGuid: true,\r\n            AutoProcessApiResponse: true,\r\n            HandleExceptions: true,\r\n            ShowPageLoadingIndicator: true,\r\n            CommandTimeoutInSeconds: 60\r\n        };\r\n\r\n        public static setExecDefaults(def: IExecDefaults) {\r\n            console.log(\"CURRENT exec defaults\", Sproc._exeDefaults);\r\n\r\n            for (var prop in def) {\r\n                this._exeDefaults[prop] = def[prop];\r\n            }\r\n\r\n            console.log(\"NEW exec defaults\", Sproc._exeDefaults);\r\n        }\r\n\r\n\r\n        // TODO: turn this into a GET property\r\n        public deferred: Deferred = null;\r\n\r\n        protected dbSource: string;\r\n        protected catalog: string;\r\n\r\n        private schema: string = null;\r\n        private routine: string = null;\r\n        private routineParams: string[] = null;\r\n        private constructorOptions: any;\r\n\r\n        private selectFieldsCsv: string;\r\n        private captchaVal: string;\r\n\r\n        public lastExecutionTime: number;\r\n        public isLoading: boolean = false;\r\n\r\n        private _alwaysCallbacks: ((res: any) => any)[];\r\n\r\n\r\n        // something in angular 2 seems to break the instanceof check...not sure what yet\r\n        public static looksLikeADuck(val: any): boolean {\r\n            if (!val) return false;\r\n            return typeof (val.ExecQuery) === \"function\" && typeof (val.routine) === \"string\" && typeof (val.routineParams) === \"object\";\r\n        }\r\n\r\n        public getExecPacket(): { dbSource: string, dbConnection: string, schema: string, routine: string, params: string[], $select: string, $captcha: string } {\r\n            return {\r\n                dbSource: this.dbSource,\r\n                dbConnection: jsDALServer.dbConnection,\r\n                schema: this.schema,\r\n                routine: this.routine,\r\n                params: this.constructorOptions,\r\n                $select: this.selectFieldsCsv,\r\n                $captcha: this.captchaVal\r\n            };\r\n        }\r\n\r\n        constructor(schema: string, routine: string, params?: string[], options?: IExecDefaults) {\r\n            this.deferred = new Deferred();\r\n\r\n            this.schema = schema;\r\n            this.routine = routine;\r\n            this.routineParams = params;\r\n            this.constructorOptions = options;\r\n        }\r\n\r\n        public then(...args) {\r\n            return this.deferred.promise.then.apply(this.deferred.promise, args);\r\n        }\r\n\r\n        public always(cb: (...any) => any): Sproc {\r\n            if (!this._alwaysCallbacks) this._alwaysCallbacks = [];\r\n\r\n            this._alwaysCallbacks.push(cb);\r\n\r\n            return this;\r\n        }\r\n\r\n        protected ExecRoutine(execFunction: string, options?: IExecDefaults): Promise<any> {\r\n\r\n            if (!execFunction || execFunction == \"\")\r\n                throw new Error(`'execFunction' must be specified. Consider using the methods ExecQuery or ExecNonQuery.`);\r\n\r\n            // default settings\r\n            let settings: IExecDefaults = Sproc._exeDefaults;\r\n\r\n            var mappedParams: any[] = [];\r\n\r\n            options = options || {};\r\n            this.constructorOptions = this.constructorOptions || {};\r\n\r\n\r\n            options = L2.extend(options, this.constructorOptions);\r\n            settings = L2.extend(settings, options);\r\n            // TODO: can we just assume TypeScript's __extends exists?\r\n\r\n            //?__extends(options, this.constructorOptions);\r\n            //?__extends(settings, options);\r\n\r\n            // look for parameters passed in that match the expected routine parameters\r\n            if (options && this.routineParams) {\r\n                mappedParams = this.routineParams.filter(parmName => {\r\n                    return options[parmName] !== undefined;\r\n                });\r\n            }\r\n\r\n            if (this.selectFieldsCsv) settings.$select = this.selectFieldsCsv;\r\n            if (this.captchaVal) settings.$captcha = this.captchaVal;\r\n\r\n            let startTick = performance.now();\r\n            this.isLoading = true;\r\n\r\n            ////return ExecGlobal(execFunction, settings.HttpMethod, this.dbSource, this.schema, this.routine, mappedParams, settings, this._alwaysCallbacks)\r\n            ////    .then(r => { this.lastExecutionTime = performance.now() - startTick; this.isLoading = false; this.deferred.resolve(r); return r; });\r\n\r\n            return Exec.ExecGlobal({\r\n                execFunction: execFunction,\r\n                httpMethod: settings.HttpMethod,\r\n                dbSource: this.dbSource,\r\n                schema: this.schema,\r\n                routine: this.routine,\r\n                mappedParams: mappedParams,\r\n                options: settings,\r\n                alwaysCBs: this._alwaysCallbacks\r\n            })\r\n                .then(r => { this.lastExecutionTime = performance.now() - startTick; this.isLoading = false; this.deferred.resolve(r); return r; });\r\n        }\r\n\r\n        public ExecQuery(options?: IExecDefaults): Promise<any> {\r\n            options = L2.extend({ HttpMethod: \"GET\" }, options); // default to GET for ExecQuery\r\n            return this.ExecRoutine(\"exec\", options);\r\n        }\r\n\r\n        public ExecNonQuery(options?: IExecDefaults): Promise<any> {\r\n            options = L2.extend({ HttpMethod: \"POST\" }, options); // default to POST for ExecNonQuery\r\n            return this.ExecRoutine(\"execnq\", options);\r\n        }\r\n\r\n        public ExecSingleResult(options?: IExecDefaults): Promise<any> {\r\n            options = L2.extend({ HttpMethod: \"GET\" }, options);\r\n            return this.ExecRoutine(\"exec\", options).then(r => {\r\n\r\n                if (r && typeof (r.Data) !== \"undefined\" && typeof (r.Data.Table0) !== \"undefined\") {\r\n\r\n                    var r1 = null;\r\n                    var op = r.Data.OutputParms;\r\n                    // take the first row of the first table in the result\r\n                    if (r.Data.Table0.length > 0) r1 = r.Data.Table0[0];\r\n\r\n                    // clean up existing Data object\r\n                    delete r.Data;\r\n\r\n                    r.Data = { OutputParms: op, Result: r1 };\r\n\r\n                    return r;\r\n                }\r\n\r\n                return r;\r\n\r\n            });\r\n        }\r\n\r\n\r\n        // Limits the return\r\n        // Tables are split by ; (semi-colon)\r\n        // Columns are split by , (comma)\r\n        public Select(...fieldNames: string[][]): Sproc {\r\n            if (fieldNames.length == null) return this;\r\n\r\n            this.selectFieldsCsv = fieldNames.join(\";\");\r\n            return this;\r\n        }\r\n\r\n        public captcha(captchaResponseValue: string): Sproc {\r\n            this.captchaVal = captchaResponseValue;\r\n            return this;\r\n        }\r\n\r\n    }\r\n\r\n    export class UDF extends Sproc {\r\n        public Exec(options?: IExecDefaults): Promise<any> {\r\n            options = L2.extend({ HttpMethod: \"GET\" }, options);\r\n            return super.ExecRoutine(\"execScalar\", options).then(r => {\r\n                // return the single result value\r\n                if (r.IsDate) return new Date(r.Data);\r\n                return r.Data;\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    export class ServerVariables {\r\n        private static PREFIX_MARKER: string = \"$jsDAL$\";\r\n        static /*get*/ ClientIP(): string {\r\n            return `${ServerVariables.PREFIX_MARKER}.RemoteClient.IP`;\r\n        }\r\n    }\r\n}\r\n\r\n//export default jsDAL;\r\n\r\n"]}