{"version":3,"file":"l2-grid.js","sourceRoot":"","sources":["../../../L2-Lib/controls/l2-grid/l2-grid.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, Input, Output, EventEmitter, Directive, QueryList, ContentChildren, AfterContentInit, ViewContainerRef, TemplateRef, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\n\nimport jsDAL from '../../L2.DAL'\n\n\n@Directive({ selector: 'column' })\nexport class L2GridColumn {\n    @Input() bound: string = null;\n    @Input() display: string = null;\n\n\n}\n\r\n \nexport class L2GridTemplateColumnRow {\n    constructor(/*public $implicit: anypublic $implicit: any, public index: number, public count: number*/) {\n    }\n}\n\n@Directive({\n    selector: '[templatecolumn]', //inputs: [ 'row', 'index' ]\n    inputs: [ 'bound', 'display'],\n    providers: [{ provide: L2GridColumn, useExisting: L2GridTemplateColumn }] // 'cheat' so that  @ContentChildren(L2GridColumn) picks up this column type as well\n\n})\nexport class L2GridTemplateColumn {\n    @Input() bound: string = null;\n    @Input() display: string = null;\n\n    constructor(private templateRef: TemplateRef<L2GridTemplateColumnRow>) {\n    }\n}\n\n\n@Directive({ selector: 'columns' })\nexport class L2GridColumnCollection implements AfterContentInit {\n    @ContentChildren(L2GridColumn) columnList: QueryList<L2GridColumn>;\n\n    ngAfterContentInit() {\n    }\n}\n\n\n@Directive({ selector: 'no-results' })\nexport class L2GridNoResults {\n\n}\n\ndeclare var require:any;\n\n@Component({\n    selector: 'l2-grid',\n    template: require('./l2-grid.html'), // temporary solution until I figure out how to compile and package this project properly\n    styles: [ require('./l2-grid.css')],\n    //templateUrl: './l2-grid.html',\n    //styleUrls: ['./l2-grid.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class L2Grid implements AfterContentInit {\n\n    private _dataSource: any = null;\n    private _sproc: jsDAL.Sproc;\n    private isDataBound: boolean = false;\n    private _autoExecute: boolean = true;\n    private _isLoading: boolean = false;\n    private _lastDurationInMilliseconds: number;\n\n    @Input() public showHeaderStats: boolean = false;\n    @Input() public showFooterStats: boolean = true;\n\n    get dataSource(): any { return this._dataSource; }\n\n    set isLoading(v: boolean) { this._isLoading = v; this.changeDetectorRef.markForCheck(); }\n    get isLoading(): boolean {\n        return this._isLoading;\n    }\n\n    set lastDurationInMilliseconds(val: number) { this._lastDurationInMilliseconds = val; }\n    get lastDurationInMilliseconds(): number { return this._lastDurationInMilliseconds; }\n\n    @Input() set dataSource(value: any) {\n\n        if (jsDAL.Sproc.looksLikeADuck(value)) {\n            this.sproc = value;\n        }\n        else {\n            this._dataSource = value;\n            if (value != null) this.isDataBound = true;\n\n            this.changeDetectorRef.markForCheck();\n        }\n    }\n\n    @Input() set autoExecute(value: boolean) {\n        this._autoExecute = value;\n    }\n\n    private set sproc(value: jsDAL.Sproc) {\n\n        this._sproc = value;\n        if (!this.isLoading) {\n            this.isLoading = this._sproc.isLoading;\n        }\n        this._sproc.then(r => {\n            this.lastDurationInMilliseconds = this._sproc.lastExecutionTime;\n            if (!r.Message) {\n                this._dataSource = r.Data.Table0;\n                this.isDataBound = true;\n            }\n            else {\n                this._dataSource = [];\n                this.isDataBound = true;\n            }\n            this._isLoading = false;\n\n            this.changeDetectorRef.markForCheck();\n\n        }).catch(e => {\n            this._isLoading = false;\n            throw e;\n        });\n    }\n\n    get autoExecute(): boolean {\n        return this._autoExecute;\n    }\n\n    ngOnInit() {\n        // if we source our data from a Sproc rather than static data\n        if (this._sproc) {\n            if (this.autoExecute) {\n                this._isLoading = true;\n                this._sproc.ExecQuery();\n            }\n\n        }\n    }\n\n\n\n\n    @ContentChildren(L2GridColumnCollection) columnCollections: QueryList<L2GridColumnCollection>;\n\n    constructor(private viewContainerRef: ViewContainerRef, private changeDetectorRef: ChangeDetectorRef) {\n    }\n\n\n    private getColumnNames(): string[] {\n        \n        \n        if (this.columnCollections == null) return null;\n        return this.columnCollections.first.columnList.map(c => c.display ? c.display : \"\");\n    }\n\n\n    ngAfterContentInit() {\n        if (this.columnCollections && this.columnCollections.length > 1) throw new Error(\"You may have only one <columns> element.\");\n    }\n\n    private getFieldData(col: L2GridColumn, row: any) {\n\n        var ret = row[col.bound];\n\n        if (ret === undefined) return \"\";\n        else return ret;\n    }\n}\n"]}