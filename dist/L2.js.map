{"version":3,"file":"L2.js","sourceRoot":"","sources":["../L2-Lib/L2.ts"],"names":[],"mappings":"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","sourcesContent":["//import { jsDAL } from \"./L2.DAL\"\r\n\r\nif (typeof ((<any>Promise).prototype.ifthen) == \"undefined\") {\r\n    (<any>Promise).prototype.ifthen = function (cond, cb) {\r\n        //if (cond) return this.then(cb);  \r\n        return this.then(r => {\r\n            if (cond) return cb(r);\r\n            else return r;\r\n        });\r\n    }\r\n}\r\n\r\n// TODO: Implement DI-based messaging service?\r\n\r\nexport interface PromiseL2<R> {\r\n    ifthen(...any): Promise<R>\r\n}\r\n\r\n// TODO: There is now a lot of overlap between L2 and L2.DAL. Make L2.DAL call L2 where overlap occurs? \r\n\r\nexport class ApiResponseEndThenChain {\r\n    handled?: boolean;\r\n}\r\n\r\nenum ApiResponseType {\r\n    Unknown = 0,\r\n    Success = 1,\r\n    InfoMsg = 10,\r\n    ExclamationModal = 20,\r\n    Error = 30,\r\n    Exception = 40\r\n}\r\n\r\nclass ApiResponse {\r\n    Message: string;\r\n    Title: string;\r\n    Type: ApiResponseType;\r\n    Data: any;\r\n}\r\n\r\n\r\nexport interface IL2OutputMessageHandler {\r\n    info(msg: string, title?: string);\r\n    success(msg: string, title?: string);\r\n    warning(msg: string, title?: string);\r\n    exclamation(msg: string, title?: string);\r\n\r\n    confirm(msg: string, title?: string): Promise<boolean>;\r\n    prompt(title?: string, fieldName?: string, val?: string, okayButtonLabel?: string): Promise<boolean>;\r\n\r\n    handleException(error: Error | ExceptionInformation | string, additionalKVs?: Object);\r\n\r\n}\r\n\r\nexport class BrowserStore {\r\n    constructor() {\r\n\r\n    }\r\n\r\n    public static local<T>(key: string, value?: T): T {\r\n        return BrowserStore.processRequest<T>(window.localStorage, key, value, \"Local\");\r\n    }\r\n\r\n    public static session<T>(key: string, value?: T): T {\r\n        return BrowserStore.processRequest<T>(window.sessionStorage, key, value, \"Session\");\r\n    }\r\n\r\n    //    private static removeItemVal = {};\r\n\r\n    public static removeSessionItem = function (key) {\r\n        window.sessionStorage.removeItem(key);\r\n    }\r\n    public static removeLocalItem = function (key) {\r\n        window.localStorage.removeItem(key);\r\n    }\r\n\r\n    private static processRequest<T>(store: Storage, key: string, value: T, storeName: string): T {\r\n\r\n        var obj: any;\r\n\r\n        // if value is not specified at all assume we are doing a get.\r\n        if (value === undefined) {\r\n            try {\r\n                // GET\r\n                obj = store.getItem(key);\r\n                return StorageObject.deserialize<T>(obj);\r\n            }\r\n            catch (ex) {\r\n                L2.handleException(ex);\r\n                //ICE.HandleJavascriptError(ex, null, { Src: \"ProcessRequest::Get\", Store: storeName, Key: key, Progress: progress, RemainingSpace: store.remainingSpace/*(only supported by IE)*/ });\r\n            }\r\n        } else {\r\n            try {\r\n                //if (value === BrowserStore.removeItemVal) {\r\n                //    store.removeItem(key);\r\n                //    return;\r\n                //}\r\n\r\n                // SET\r\n                obj = new StorageObject(value);\r\n                store.setItem(key, JSON.stringify(obj));\r\n            }\r\n            catch (ex) {\r\n                L2.handleException(ex);\r\n                //ICE.HandleJavascriptError(ex, null, { Src: \"ProcessRequest::Set\", Store: storeName, Key: key, Value: value, Progress: progress, RemainingSpace: store.remainingSpace/*(only supported by IE)*/ });\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nclass StorageObject {\r\n\r\n    private isValueAndObject: boolean;\r\n    private value: any;\r\n\r\n    constructor(val: any) {\r\n        this.isValueAndObject = (typeof val === \"object\");\r\n        this.value = val;\r\n    }\r\n\r\n    public static deserialize<T>(val: any): T {\r\n        if (!val || typeof (val) === \"undefined\") return null;\r\n\r\n        var obj = JSON.parse(val);\r\n        //!if (obj.IsValueAnObject) return $.parseJSON(obj.Value);\r\n        return obj.value;\r\n    }\r\n\r\n}\r\n\r\nexport class L2 {\r\n\r\n    private static _customOutputMsgHandler: IL2OutputMessageHandler;\r\n\r\n    static prepareBlob(blob: Blob, filename: string = \"blob\"): Promise<string> & { onprogress?: (func: (progress: number) => void) => Promise<string[]> } {\r\n\r\n        let xhr: XMLHttpRequest = new XMLHttpRequest();\r\n        let listeners: ((progress: number) => void)[];\r\n        let finalProgressNotified: boolean = false;\r\n\r\n        let prom: Promise<string[]> & { onprogress?: (func:(progress:number)=>void)=>Promise<string[]> } = new Promise<string[]>((resolve, reject) => {\r\n\r\n            xhr.upload.onprogress = (ev: ProgressEvent) => {\r\n                let perc = (ev.loaded / ev.total) * 100.0;\r\n\r\n                if (perc == 100 && finalProgressNotified) return;\r\n                if (perc == 100 && !finalProgressNotified) finalProgressNotified = true;\r\n\r\n                if (listeners) listeners.forEach(l => l(perc));\r\n            };\r\n\r\n            xhr.upload.onload = (ev: Event) => {\r\n                if (!finalProgressNotified) {\r\n                    finalProgressNotified = true;\r\n                    if (listeners) listeners.forEach(l => l(100));\r\n                }\r\n            };\r\n\r\n            xhr.onreadystatechange = () => {\r\n                if (xhr.readyState === 4) {\r\n                    if (xhr.status === 200) {\r\n                        // we expect JSON on a 200 request\r\n                        // TODO: add try catch though for when its NOT JSON????\r\n                        let json: { Data?: string[] } = JSON.parse(xhr.response);\r\n\r\n                        if (json.Data && json.Data.length > 0) {\r\n                            resolve(json.Data);\r\n                        }\r\n                        else {\r\n                            resolve(null);\r\n                        }                        \r\n\r\n                    } else {\r\n                        reject(xhr.response);\r\n                    }\r\n                }\r\n            };\r\n\r\n            xhr.open('POST', `${jsDALServer.serverUrl}/api/blob`, true);\r\n\r\n            let formData = new FormData();\r\n            formData.append(filename, blob);\r\n            xhr.send(formData);\r\n        });\r\n      \r\n        \r\n        prom.onprogress = (func: (progress: number) => void) => {\r\n            if (!listeners) listeners = [];\r\n            listeners.push(func);\r\n            return prom;\r\n        }\r\n\r\n        return <any>prom;\r\n    }\r\n\r\n\r\n    public static BrowserStore: {\r\n        local<T>(key: string, value?: T): T,\r\n        session<T>(key: string, value?: T): T,\r\n        removeSessionItem: (key: any) => void,\r\n        removeLocalItem: (key: any) => void\r\n    };\r\n\r\n    static registerOutputMessageHandler(handler: IL2OutputMessageHandler) {\r\n        L2._customOutputMsgHandler = handler;\r\n    }\r\n\r\n    static info(msg: string, title?: string) {\r\n        if (L2._customOutputMsgHandler) L2._customOutputMsgHandler.info.apply(L2._customOutputMsgHandler, arguments);\r\n    }\r\n\r\n    static success(msg: string, title?: string) {\r\n        if (L2._customOutputMsgHandler) L2._customOutputMsgHandler.success.apply(L2._customOutputMsgHandler, arguments);\r\n    }\r\n\r\n    static exclamation(msg: string, title?: string) {\r\n        if (L2._customOutputMsgHandler) L2._customOutputMsgHandler.warning.apply(L2._customOutputMsgHandler, arguments);\r\n    }\r\n\r\n    static confirm(msg: string, title?: string): Promise<boolean> {\r\n        let args = arguments;\r\n        if (L2._customOutputMsgHandler) {\r\n            return L2._customOutputMsgHandler.confirm.apply(L2._customOutputMsgHandler, args);\r\n        }\r\n\r\n        return new Promise<boolean>((resolve, reject) => {\r\n            reject(false); // currenly no default implementation\r\n        });\r\n    }\r\n\r\n    public static prompt(title?: string, fieldName?: string, val?: string, okayButtonLabel?: string): Promise<any> {\r\n        let args = arguments;\r\n        if (L2._customOutputMsgHandler) {\r\n            return L2._customOutputMsgHandler.prompt.apply(L2._customOutputMsgHandler, args);\r\n        }\r\n\r\n\r\n        return new Promise<boolean>((resolve, reject) => {\r\n            reject(false); // currenly no default implementation\r\n        });\r\n    }\r\n\r\n    static handleException(error: Error | ExceptionInformation | string, additionalKVs?: Object) {\r\n        if (L2._customOutputMsgHandler) L2._customOutputMsgHandler.handleException.apply(L2._customOutputMsgHandler, arguments);\r\n        else {\r\n\r\n            throw error;\r\n        }\r\n\r\n    }\r\n\r\n    static nullToEmpty(val: string) {\r\n        if (val == null || val == undefined) return '';\r\n        else return val;\r\n    }\r\n\r\n    // https://gomakethings.com/vanilla-javascript-version-of-jquery-extend/\r\n    // Pass in the objects to merge as arguments.\r\n    // For a deep extend, set the first argument to `true`.\r\n    static extend(...any) {\r\n        var extended = {};\r\n        var deep = false;\r\n        var i = 0;\r\n        var length = arguments.length;\r\n\r\n        // Check if a deep merge\r\n        if (Object.prototype.toString.call(arguments[0]) === '[object Boolean]') {\r\n            deep = arguments[0];\r\n            i++;\r\n        }\r\n\r\n        // Merge the object into the extended object\r\n        var merge = function (obj) {\r\n            for (var prop in obj) {\r\n                if (Object.prototype.hasOwnProperty.call(obj, prop)) {\r\n                    // If deep merge and property is an object, merge properties\r\n                    if (deep && Object.prototype.toString.call(obj[prop]) === '[object Object]') {\r\n                        extended[prop] = this.extend(true, extended[prop], obj[prop]);\r\n                    } else {\r\n                        extended[prop] = obj[prop];\r\n                    }\r\n                }\r\n            }\r\n        };\r\n\r\n        // Loop through each object and conduct a merge\r\n        for (; i < length; i++) {\r\n            var obj = arguments[i];\r\n            merge(obj);\r\n        }\r\n\r\n        return extended;\r\n\r\n    };\r\n\r\n\r\n    static clientIP(): Promise<string> {\r\n        return new Promise<string>((resolve, reject) => {\r\n            fetch(`${jsDALServer.serverUrl}/api/util/clientip`)\r\n                .then((r) => {\r\n                    if (r.status >= 200 && r.status < 300) { return r; }\r\n                    else { resolve(null); }\r\n                })\r\n                .then((r: any) => {\r\n                    resolve(r);\r\n                }).catch(e => resolve(null));\r\n        });\r\n    }\r\n\r\n\r\n    private static processApiResponse(json): Response {\r\n        // if the result is a string, test for ApiResponse\r\n        if (typeof (json) === \"object\" && typeof (json.ApiResponseVer) !== \"undefined\") {\r\n\r\n            let apiResponse = json;\r\n\r\n            switch (apiResponse.Type) {\r\n                case ApiResponseType.Success:\r\n                    return apiResponse;\r\n                case ApiResponseType.InfoMsg:\r\n                    L2.info(apiResponse.Message);\r\n                    break;\r\n                case ApiResponseType.ExclamationModal:\r\n                    {\r\n                        L2.exclamation(apiResponse.Message);\r\n                        throw new ApiResponseEndThenChain();\r\n                    }\r\n                case ApiResponseType.Exception:\r\n                    {\r\n                        L2.exclamation(apiResponse.Message);\r\n\r\n                        throw new ApiResponseEndThenChain();\r\n                    }\r\n\r\n\r\n            }\r\n\r\n\r\n            return apiResponse;\r\n        }\r\n        else {\r\n            return json;\r\n        }\r\n\r\n    }\r\n\r\n\r\n    static fetchJson(url: string | Request, init?: RequestInit): Promise<Response> {\r\n\r\n        return (<any>L2.fetchWrap(url, init)\r\n            .then(L2.checkHttpStatus)\r\n            .then(L2.parseJSON)\r\n        )\r\n            .ifthen(true, L2.processApiResponse)\r\n            .catch(L2.fetchCatch);\r\n    }\r\n\r\n\r\n    static postJson(url: string | Request, init?: RequestInit): Promise<Response> & PromiseL2<Response> {\r\n\r\n        var defaults = {\r\n            method: \"post\",\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            }\r\n        };\r\n\r\n        var settings = L2.extend(defaults, init);\r\n\r\n        return (<any>L2.fetchWrap(url, settings)\r\n            .then(L2.checkHttpStatus)\r\n            .then(L2.parseJSON))\r\n            .ifthen(true, L2.processApiResponse)\r\n            .catch(L2.fetchCatch)\r\n\r\n            ;\r\n    }\r\n\r\n    static putJson(url: string | Request, init?: RequestInit): Promise<Response> & PromiseL2<Response> {\r\n\r\n        var defaults = {\r\n            method: \"put\",\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            }\r\n        };\r\n\r\n        var settings = L2.extend(defaults, init);\r\n\r\n        return <any>L2.fetchWrap(url, settings)\r\n            .then(L2.checkHttpStatus)\r\n            .then(L2.parseJSON)\r\n            .then(L2.processApiResponse)\r\n            //!.ifthen(true, processApiResponse)\r\n            .catch(L2.fetchCatch)\r\n            ;\r\n    }\r\n\r\n    static deleteJson(url: string | Request, init?: RequestInit): Promise<Response> & PromiseL2<Response> {\r\n\r\n        var defaults = {\r\n            method: \"delete\",\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            }\r\n        };\r\n\r\n        var settings = L2.extend(defaults, init);\r\n\r\n        return <any>L2.fetchWrap(url, settings)\r\n            .then(L2.checkHttpStatus)\r\n            .then(L2.parseJSON)\r\n            .then(L2.processApiResponse)\r\n            //!.ifthen(true, processApiResponse)\r\n            .catch(L2.fetchCatch)\r\n\r\n            ;\r\n\r\n    }\r\n\r\n    private static fetchWrap(url: string | Request, init?: RequestInit): Promise<Response> & PromiseL2<Response> {\r\n\r\n        return <any>new Promise<Response>((resolve, reject) => {\r\n\r\n            // PL: Temp hack when we are running with ng serve\r\n            if (window.location.port == '4200') url = 'https://jsdal.europassistance.co.za' + url;\r\n\r\n            var jwt = BrowserStore.session<any>(\"jwt\");\r\n\r\n            // if  a JWT exists, use it\r\n            if (jwt != null) {\r\n\r\n                if (!init) init = {};\r\n                if (!init.headers) init.headers = {};\r\n\r\n                init.headers[\"x-access-token\"] = jwt.token; // can eventually be removed if we only run on the jsdal-core version\r\n                init.headers[\"Authorization\"] = \"Bearer \" + jwt.token;\r\n            }\r\n\r\n            if (!init) init = {};\r\n\r\n            init.mode = 'cors';\r\n\r\n\r\n            fetch(url, init).then((r: any) => {\r\n                r.fetch = { url: url, init: init };\r\n                resolve(r);\r\n            })[\"catch\"](err => {\r\n                err.fetch = { url: url, init: init };\r\n                reject(err);\r\n            }).then(r => { resolve(<any>r); });\r\n        });\r\n    }\r\n\r\n\r\n    private static fetchCatch(ex) {\r\n        if (ex instanceof ApiResponseEndThenChain) {\r\n            ex.handled = true; //?\r\n            // handle special case where we just threw and exception(ApiResponseEndThenChain) to end any remaining 'thens' on the promise.\r\n            // we have to rethrow to prevent any additional '.then' callbacks from being executed\r\n            throw ex;\r\n        }\r\n\r\n\r\n        // TODO: Improve error here - look for specific type of failures (eg. network related)\r\n        //MsgDialog.exclamation(L2.dialog, \"fetch failed\", ex.toString());\r\n        // 02/11/2017, PL: I think this needs to be a THROW otherwise we end up going to the next then instead of the next catch handler\r\n        return ex;\r\n    }\r\n\r\n    private static checkHttpStatus(response: Response): Response | any {\r\n        if (response.status >= 200 && response.status < 300) {\r\n            return response;\r\n        } else {\r\n            let error: Error & { response?: any } = new Error(response.statusText)\r\n\r\n            error.response = response;\r\n\r\n            // MsgDialog.exclamation(L2.dialog, \"HTTP \" + response.status, error.toString());\r\n\r\n            throw error;\r\n\r\n            //throw new ApiResponseEndThenChain();\r\n        }\r\n    }\r\n\r\n\r\n    private static parseJSON(response) {\r\n\r\n        return response.json().then((json) => {\r\n            // if still a string after parsing once...\r\n            if (typeof (json) === \"string\" && json.startsWith(\"{\")) return JSON.parse(json);\r\n\r\n            return json;\r\n        });\r\n    }\r\n\r\n\r\n}\r\n\r\nexport interface JWT {\r\n    access_token?: string;\r\n    expires_in?: number;\r\n    token_type?: string;\r\n}\r\n\r\n\r\nexport class jsDALServer {\r\n    //private static _serverUrl: string;\r\n    //private static _dbConnection: string;\r\n    // 30/08/2016, PL: IE8 does not support GET/SET properties\r\n    //static get serverUrl(): string {\r\n    //    return Server._serverUrl;\r\n    //}\r\n\r\n    //static get dbConnection(): string {\r\n    //    return Server._dbConnection;\r\n    //}\r\n    public static serverUrl: string;\r\n    public static dbConnection: string;\r\n    public static endpoint: string;\r\n    public static overridingDbSource: string;\r\n    public static applicationTitle: string;\r\n    public static jwt: JWT;\r\n\r\n    static configure(options: IDALServerOptions) {\r\n\r\n        if (options.dbConnection == \"\") options.dbConnection = null;\r\n\r\n        jsDALServer.serverUrl = options.serverUrl;\r\n        jsDALServer.dbConnection = options.dbConnection;\r\n        jsDALServer.jwt = options.jwt;\r\n        jsDALServer.overridingDbSource = options.overridingDbSource;\r\n        jsDALServer.endpoint = options.endpoint;\r\n        jsDALServer.applicationTitle = options.applicationTitle;\r\n    }\r\n}\r\n\r\nexport interface IDALServerOptions {\r\n    serverUrl?: string;\r\n    dbConnection?: string;\r\n    overridingDbSource?: string;\r\n    endpoint?: string;\r\n    jwt?: JWT;\r\n    applicationTitle?: string;\r\n}\r\n\r\ndelete L2.BrowserStore;\r\n(<any>L2).BrowserStore = BrowserStore; // don't know the correct TS way"]}